{"version":3,"file":"nestjs-mod-fullstack-app-angular-rest-sdk.mjs","sources":["../../../../../libs/sdk/app-angular-rest-sdk/src/lib/configuration.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/api.module.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/encoder.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/variables.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/api/app-rest.service.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/api/auth-rest.service.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/api/files-rest.service.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/api/terminus-health-check-rest.service.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/api/time-rest.service.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/api/webhook-rest.service.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/api/api.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/app-data.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/app-demo.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/auth-error-enum.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/auth-role.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/auth-user-scalar-field-enum.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/create-webhook-dto.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/files-error-enum.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/find-many-response-meta.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/presigned-urls.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/status-response.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/terminus-health-check-controller-check200-response-info-value.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/update-webhook-dto.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/validation-error-enum.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/validation-error-metadata-constraint.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/webhook-error-enum.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/webhook-event.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/webhook-log-scalar-field-enum.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/webhook-role.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/webhook-scalar-field-enum.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/webhook-status.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/lib/model/webhook-user-scalar-field-enum.interface.ts","../../../../../libs/sdk/app-angular-rest-sdk/src/nestjs-mod-fullstack-app-angular-rest-sdk.ts"],"sourcesContent":["import { HttpParameterCodec } from '@angular/common/http';\nimport { Param } from './param';\n\nexport interface RestClientConfigurationParameters {\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    /**\n     * Takes care of encoding query- and form-parameters.\n     */\n    encoder?: HttpParameterCodec;\n    /**\n     * Override the default method for encoding path parameters in various\n     * <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#style-values\">styles</a>.\n     * <p>\n     * See {@link README.md} for more details\n     * </p>\n     */\n    encodeParam?: (param: Param) => string;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class RestClientConfiguration {\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    /**\n     * Takes care of encoding query- and form-parameters.\n     */\n    encoder?: HttpParameterCodec;\n    /**\n     * Encoding of various path parameter\n     * <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#style-values\">styles</a>.\n     * <p>\n     * See {@link README.md} for more details\n     * </p>\n     */\n    encodeParam: (param: Param) => string;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: RestClientConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.encodeParam) {\n            this.encodeParam = configurationParameters.encodeParam;\n        }\n        else {\n            this.encodeParam = param => this.defaultEncodeParam(param);\n        }\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n\n        // init default bearer credential\n        if (!this.credentials['bearer']) {\n            this.credentials['bearer'] = () => {\n                return typeof this.accessToken === 'function'\n                    ? this.accessToken()\n                    : this.accessToken;\n            };\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link RestClientConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link RestClientConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n\n    private defaultEncodeParam(param: Param): string {\n        // This implementation exists as fallback for missing configuration\n        // and for backwards compatibility to older typescript-angular generator versions.\n        // It only works for the 'simple' parameter style.\n        // Date-handling only works for the 'date-time' format.\n        // All other styles and Date-formats are probably handled incorrectly.\n        //\n        // But: if that's all you need (i.e.: the most common use-case): no need for customization!\n\n        const value = param.dataFormat === 'date-time' && param.value instanceof Date\n            ? (param.value as Date).toISOString()\n            : param.value;\n\n        return encodeURIComponent(String(value));\n    }\n}\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { RestClientConfiguration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: []\n})\nexport class RestClientApiModule {\n    public static forRoot(configurationFactory: () => RestClientConfiguration): ModuleWithProviders<RestClientApiModule> {\n        return {\n            ngModule: RestClientApiModule,\n            providers: [ { provide: RestClientConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: RestClientApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('RestClientApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n  HttpParameterCodec,\n  HttpContext,\n} from '@angular/common/http';\nimport { CustomHttpParameterCodec } from '../encoder';\nimport { Observable } from 'rxjs';\n\n// @ts-ignore\nimport { AppDataInterface } from '../model/app-data.interface';\n// @ts-ignore\nimport { AppDemoInterface } from '../model/app-demo.interface';\n\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { RestClientConfiguration } from '../configuration';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppRestService {\n  protected basePath = 'http://localhost';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new RestClientConfiguration();\n  public encoder: HttpParameterCodec;\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string | string[],\n    @Optional() configuration: RestClientConfiguration\n  ) {\n    if (configuration) {\n      this.configuration = configuration;\n    }\n    if (typeof this.configuration.basePath !== 'string') {\n      const firstBasePath = Array.isArray(basePath) ? basePath[0] : undefined;\n      if (firstBasePath != undefined) {\n        basePath = firstBasePath;\n      }\n\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n      this.configuration.basePath = basePath;\n    }\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  // @ts-ignore\n  private addToHttpParams(\n    httpParams: HttpParams,\n    value: any,\n    key?: string\n  ): HttpParams {\n    if (typeof value === 'object' && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n    return httpParams;\n  }\n\n  private addToHttpParamsRecursive(\n    httpParams: HttpParams,\n    value?: any,\n    key?: string\n  ): HttpParams {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        (value as any[]).forEach(\n          (elem) =>\n            (httpParams = this.addToHttpParamsRecursive(httpParams, elem, key))\n        );\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(\n            key,\n            (value as Date).toISOString().substring(0, 10)\n          );\n        } else {\n          throw Error('key may not be null if value is Date');\n        }\n      } else {\n        Object.keys(value).forEach(\n          (k) =>\n            (httpParams = this.addToHttpParamsRecursive(\n              httpParams,\n              value[k],\n              key != null ? `${key}.${k}` : k\n            ))\n        );\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error('key may not be null if value is not object or array');\n    }\n    return httpParams;\n  }\n\n  /**\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public appControllerDemoCreateOne(\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<AppDemoInterface>;\n  public appControllerDemoCreateOne(\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<AppDemoInterface>>;\n  public appControllerDemoCreateOne(\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<AppDemoInterface>>;\n  public appControllerDemoCreateOne(\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/demo`;\n    return this.httpClient.request<AppDemoInterface>(\n      'post',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public appControllerDemoDeleteOne(\n    id: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<AppDemoInterface>;\n  public appControllerDemoDeleteOne(\n    id: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<AppDemoInterface>>;\n  public appControllerDemoDeleteOne(\n    id: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<AppDemoInterface>>;\n  public appControllerDemoDeleteOne(\n    id: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling appControllerDemoDeleteOne.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/demo/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'string',\n      dataFormat: undefined,\n    })}`;\n    return this.httpClient.request<AppDemoInterface>(\n      'delete',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public appControllerDemoFindMany(\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<Array<AppDemoInterface>>;\n  public appControllerDemoFindMany(\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<Array<AppDemoInterface>>>;\n  public appControllerDemoFindMany(\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<Array<AppDemoInterface>>>;\n  public appControllerDemoFindMany(\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/demo`;\n    return this.httpClient.request<Array<AppDemoInterface>>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public appControllerDemoFindOne(\n    id: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<AppDemoInterface>;\n  public appControllerDemoFindOne(\n    id: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<AppDemoInterface>>;\n  public appControllerDemoFindOne(\n    id: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<AppDemoInterface>>;\n  public appControllerDemoFindOne(\n    id: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling appControllerDemoFindOne.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/demo/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'string',\n      dataFormat: undefined,\n    })}`;\n    return this.httpClient.request<AppDemoInterface>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public appControllerDemoUpdateOne(\n    id: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<AppDemoInterface>;\n  public appControllerDemoUpdateOne(\n    id: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<AppDemoInterface>>;\n  public appControllerDemoUpdateOne(\n    id: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<AppDemoInterface>>;\n  public appControllerDemoUpdateOne(\n    id: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling appControllerDemoUpdateOne.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/demo/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'string',\n      dataFormat: undefined,\n    })}`;\n    return this.httpClient.request<AppDemoInterface>(\n      'put',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public appControllerGetData(\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<AppDataInterface>;\n  public appControllerGetData(\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<AppDataInterface>>;\n  public appControllerGetData(\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<AppDataInterface>>;\n  public appControllerGetData(\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/get-data`;\n    return this.httpClient.request<AppDataInterface>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n  HttpParameterCodec,\n  HttpContext,\n} from '@angular/common/http';\nimport { CustomHttpParameterCodec } from '../encoder';\nimport { Observable } from 'rxjs';\n\n// @ts-ignore\nimport { AuthControllerProfile400ResponseInterface } from '../model/auth-controller-profile400-response.interface';\n// @ts-ignore\nimport { AuthProfileDtoInterface } from '../model/auth-profile-dto.interface';\n// @ts-ignore\nimport { AuthUserInterface } from '../model/auth-user.interface';\n// @ts-ignore\nimport { FindManyAuthUserResponseInterface } from '../model/find-many-auth-user-response.interface';\n// @ts-ignore\nimport { StatusResponseInterface } from '../model/status-response.interface';\n// @ts-ignore\nimport { UpdateAuthUserDtoInterface } from '../model/update-auth-user-dto.interface';\n\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { RestClientConfiguration } from '../configuration';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthRestService {\n  protected basePath = 'http://localhost';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new RestClientConfiguration();\n  public encoder: HttpParameterCodec;\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string | string[],\n    @Optional() configuration: RestClientConfiguration\n  ) {\n    if (configuration) {\n      this.configuration = configuration;\n    }\n    if (typeof this.configuration.basePath !== 'string') {\n      const firstBasePath = Array.isArray(basePath) ? basePath[0] : undefined;\n      if (firstBasePath != undefined) {\n        basePath = firstBasePath;\n      }\n\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n      this.configuration.basePath = basePath;\n    }\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  // @ts-ignore\n  private addToHttpParams(\n    httpParams: HttpParams,\n    value: any,\n    key?: string\n  ): HttpParams {\n    if (typeof value === 'object' && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n    return httpParams;\n  }\n\n  private addToHttpParamsRecursive(\n    httpParams: HttpParams,\n    value?: any,\n    key?: string\n  ): HttpParams {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        (value as any[]).forEach(\n          (elem) =>\n            (httpParams = this.addToHttpParamsRecursive(httpParams, elem, key))\n        );\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(\n            key,\n            (value as Date).toISOString().substring(0, 10)\n          );\n        } else {\n          throw Error('key may not be null if value is Date');\n        }\n      } else {\n        Object.keys(value).forEach(\n          (k) =>\n            (httpParams = this.addToHttpParamsRecursive(\n              httpParams,\n              value[k],\n              key != null ? `${key}.${k}` : k\n            ))\n        );\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error('key may not be null if value is not object or array');\n    }\n    return httpParams;\n  }\n\n  /**\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public authControllerProfile(\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<AuthProfileDtoInterface>;\n  public authControllerProfile(\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<AuthProfileDtoInterface>>;\n  public authControllerProfile(\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<AuthProfileDtoInterface>>;\n  public authControllerProfile(\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/auth/profile`;\n    return this.httpClient.request<AuthProfileDtoInterface>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param authProfileDtoInterface\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public authControllerUpdateProfile(\n    authProfileDtoInterface: AuthProfileDtoInterface,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<StatusResponseInterface>;\n  public authControllerUpdateProfile(\n    authProfileDtoInterface: AuthProfileDtoInterface,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<StatusResponseInterface>>;\n  public authControllerUpdateProfile(\n    authProfileDtoInterface: AuthProfileDtoInterface,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<StatusResponseInterface>>;\n  public authControllerUpdateProfile(\n    authProfileDtoInterface: AuthProfileDtoInterface,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (\n      authProfileDtoInterface === null ||\n      authProfileDtoInterface === undefined\n    ) {\n      throw new Error(\n        'Required parameter authProfileDtoInterface was null or undefined when calling authControllerUpdateProfile.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = ['application/json'];\n    const httpContentTypeSelected: string | undefined =\n      this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Content-Type',\n        httpContentTypeSelected\n      );\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/auth/update-profile`;\n    return this.httpClient.request<StatusResponseInterface>(\n      'post',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        body: authProfileDtoInterface,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public authUsersControllerDeleteOne(\n    id: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<StatusResponseInterface>;\n  public authUsersControllerDeleteOne(\n    id: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<StatusResponseInterface>>;\n  public authUsersControllerDeleteOne(\n    id: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<StatusResponseInterface>>;\n  public authUsersControllerDeleteOne(\n    id: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling authUsersControllerDeleteOne.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/auth/users/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'string',\n      dataFormat: undefined,\n    })}`;\n    return this.httpClient.request<StatusResponseInterface>(\n      'delete',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param curPage\n   * @param perPage\n   * @param searchText\n   * @param sort\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public authUsersControllerFindMany(\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<FindManyAuthUserResponseInterface>;\n  public authUsersControllerFindMany(\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<FindManyAuthUserResponseInterface>>;\n  public authUsersControllerFindMany(\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<FindManyAuthUserResponseInterface>>;\n  public authUsersControllerFindMany(\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    let localVarQueryParameters = new HttpParams({ encoder: this.encoder });\n    if (curPage !== undefined && curPage !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>curPage,\n        'curPage'\n      );\n    }\n    if (perPage !== undefined && perPage !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>perPage,\n        'perPage'\n      );\n    }\n    if (searchText !== undefined && searchText !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>searchText,\n        'searchText'\n      );\n    }\n    if (sort !== undefined && sort !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>sort,\n        'sort'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/auth/users`;\n    return this.httpClient.request<FindManyAuthUserResponseInterface>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        params: localVarQueryParameters,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public authUsersControllerFindOne(\n    id: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<AuthUserInterface>;\n  public authUsersControllerFindOne(\n    id: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<AuthUserInterface>>;\n  public authUsersControllerFindOne(\n    id: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<AuthUserInterface>>;\n  public authUsersControllerFindOne(\n    id: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling authUsersControllerFindOne.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/auth/users/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'string',\n      dataFormat: undefined,\n    })}`;\n    return this.httpClient.request<AuthUserInterface>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param id\n   * @param updateAuthUserDtoInterface\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public authUsersControllerUpdateOne(\n    id: string,\n    updateAuthUserDtoInterface: UpdateAuthUserDtoInterface,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<AuthUserInterface>;\n  public authUsersControllerUpdateOne(\n    id: string,\n    updateAuthUserDtoInterface: UpdateAuthUserDtoInterface,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<AuthUserInterface>>;\n  public authUsersControllerUpdateOne(\n    id: string,\n    updateAuthUserDtoInterface: UpdateAuthUserDtoInterface,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<AuthUserInterface>>;\n  public authUsersControllerUpdateOne(\n    id: string,\n    updateAuthUserDtoInterface: UpdateAuthUserDtoInterface,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling authUsersControllerUpdateOne.'\n      );\n    }\n    if (\n      updateAuthUserDtoInterface === null ||\n      updateAuthUserDtoInterface === undefined\n    ) {\n      throw new Error(\n        'Required parameter updateAuthUserDtoInterface was null or undefined when calling authUsersControllerUpdateOne.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = ['application/json'];\n    const httpContentTypeSelected: string | undefined =\n      this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Content-Type',\n        httpContentTypeSelected\n      );\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/auth/users/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'string',\n      dataFormat: undefined,\n    })}`;\n    return this.httpClient.request<AuthUserInterface>(\n      'put',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        body: updateAuthUserDtoInterface,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n  HttpParameterCodec,\n  HttpContext,\n} from '@angular/common/http';\nimport { CustomHttpParameterCodec } from '../encoder';\nimport { Observable } from 'rxjs';\n\n// @ts-ignore\nimport { PresignedUrlsInterface } from '../model/presigned-urls.interface';\n// @ts-ignore\nimport { StatusResponseInterface } from '../model/status-response.interface';\n\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { RestClientConfiguration } from '../configuration';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilesRestService {\n  protected basePath = 'http://localhost';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new RestClientConfiguration();\n  public encoder: HttpParameterCodec;\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string | string[],\n    @Optional() configuration: RestClientConfiguration\n  ) {\n    if (configuration) {\n      this.configuration = configuration;\n    }\n    if (typeof this.configuration.basePath !== 'string') {\n      const firstBasePath = Array.isArray(basePath) ? basePath[0] : undefined;\n      if (firstBasePath != undefined) {\n        basePath = firstBasePath;\n      }\n\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n      this.configuration.basePath = basePath;\n    }\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  // @ts-ignore\n  private addToHttpParams(\n    httpParams: HttpParams,\n    value: any,\n    key?: string\n  ): HttpParams {\n    if (typeof value === 'object' && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n    return httpParams;\n  }\n\n  private addToHttpParamsRecursive(\n    httpParams: HttpParams,\n    value?: any,\n    key?: string\n  ): HttpParams {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        (value as any[]).forEach(\n          (elem) =>\n            (httpParams = this.addToHttpParamsRecursive(httpParams, elem, key))\n        );\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(\n            key,\n            (value as Date).toISOString().substring(0, 10)\n          );\n        } else {\n          throw Error('key may not be null if value is Date');\n        }\n      } else {\n        Object.keys(value).forEach(\n          (k) =>\n            (httpParams = this.addToHttpParamsRecursive(\n              httpParams,\n              value[k],\n              key != null ? `${key}.${k}` : k\n            ))\n        );\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error('key may not be null if value is not object or array');\n    }\n    return httpParams;\n  }\n\n  /**\n   * @param downloadUrl\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public filesControllerDeleteFile(\n    downloadUrl: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<StatusResponseInterface>;\n  public filesControllerDeleteFile(\n    downloadUrl: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<StatusResponseInterface>>;\n  public filesControllerDeleteFile(\n    downloadUrl: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<StatusResponseInterface>>;\n  public filesControllerDeleteFile(\n    downloadUrl: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (downloadUrl === null || downloadUrl === undefined) {\n      throw new Error(\n        'Required parameter downloadUrl was null or undefined when calling filesControllerDeleteFile.'\n      );\n    }\n\n    let localVarQueryParameters = new HttpParams({ encoder: this.encoder });\n    if (downloadUrl !== undefined && downloadUrl !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>downloadUrl,\n        'downloadUrl'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/files/delete-file`;\n    return this.httpClient.request<StatusResponseInterface>(\n      'post',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        params: localVarQueryParameters,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param ext\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public filesControllerGetPresignedUrl(\n    ext: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<PresignedUrlsInterface>;\n  public filesControllerGetPresignedUrl(\n    ext: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<PresignedUrlsInterface>>;\n  public filesControllerGetPresignedUrl(\n    ext: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<PresignedUrlsInterface>>;\n  public filesControllerGetPresignedUrl(\n    ext: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (ext === null || ext === undefined) {\n      throw new Error(\n        'Required parameter ext was null or undefined when calling filesControllerGetPresignedUrl.'\n      );\n    }\n\n    let localVarQueryParameters = new HttpParams({ encoder: this.encoder });\n    if (ext !== undefined && ext !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>ext,\n        'ext'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/files/get-presigned-url`;\n    return this.httpClient.request<PresignedUrlsInterface>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        params: localVarQueryParameters,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n  HttpParameterCodec,\n  HttpContext,\n} from '@angular/common/http';\nimport { CustomHttpParameterCodec } from '../encoder';\nimport { Observable } from 'rxjs';\n\n// @ts-ignore\nimport { TerminusHealthCheckControllerCheck200ResponseInterface } from '../model/terminus-health-check-controller-check200-response.interface';\n// @ts-ignore\nimport { TerminusHealthCheckControllerCheck503ResponseInterface } from '../model/terminus-health-check-controller-check503-response.interface';\n\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { RestClientConfiguration } from '../configuration';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TerminusHealthCheckRestService {\n  protected basePath = 'http://localhost';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new RestClientConfiguration();\n  public encoder: HttpParameterCodec;\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string | string[],\n    @Optional() configuration: RestClientConfiguration\n  ) {\n    if (configuration) {\n      this.configuration = configuration;\n    }\n    if (typeof this.configuration.basePath !== 'string') {\n      const firstBasePath = Array.isArray(basePath) ? basePath[0] : undefined;\n      if (firstBasePath != undefined) {\n        basePath = firstBasePath;\n      }\n\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n      this.configuration.basePath = basePath;\n    }\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  // @ts-ignore\n  private addToHttpParams(\n    httpParams: HttpParams,\n    value: any,\n    key?: string\n  ): HttpParams {\n    if (typeof value === 'object' && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n    return httpParams;\n  }\n\n  private addToHttpParamsRecursive(\n    httpParams: HttpParams,\n    value?: any,\n    key?: string\n  ): HttpParams {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        (value as any[]).forEach(\n          (elem) =>\n            (httpParams = this.addToHttpParamsRecursive(httpParams, elem, key))\n        );\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(\n            key,\n            (value as Date).toISOString().substring(0, 10)\n          );\n        } else {\n          throw Error('key may not be null if value is Date');\n        }\n      } else {\n        Object.keys(value).forEach(\n          (k) =>\n            (httpParams = this.addToHttpParamsRecursive(\n              httpParams,\n              value[k],\n              key != null ? `${key}.${k}` : k\n            ))\n        );\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error('key may not be null if value is not object or array');\n    }\n    return httpParams;\n  }\n\n  /**\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public terminusHealthCheckControllerCheck(\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<TerminusHealthCheckControllerCheck200ResponseInterface>;\n  public terminusHealthCheckControllerCheck(\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<\n    HttpResponse<TerminusHealthCheckControllerCheck200ResponseInterface>\n  >;\n  public terminusHealthCheckControllerCheck(\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<\n    HttpEvent<TerminusHealthCheckControllerCheck200ResponseInterface>\n  >;\n  public terminusHealthCheckControllerCheck(\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/health`;\n    return this.httpClient.request<TerminusHealthCheckControllerCheck200ResponseInterface>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n  HttpParameterCodec,\n  HttpContext,\n} from '@angular/common/http';\nimport { CustomHttpParameterCodec } from '../encoder';\nimport { Observable } from 'rxjs';\n\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { RestClientConfiguration } from '../configuration';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TimeRestService {\n  protected basePath = 'http://localhost';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new RestClientConfiguration();\n  public encoder: HttpParameterCodec;\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string | string[],\n    @Optional() configuration: RestClientConfiguration\n  ) {\n    if (configuration) {\n      this.configuration = configuration;\n    }\n    if (typeof this.configuration.basePath !== 'string') {\n      const firstBasePath = Array.isArray(basePath) ? basePath[0] : undefined;\n      if (firstBasePath != undefined) {\n        basePath = firstBasePath;\n      }\n\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n      this.configuration.basePath = basePath;\n    }\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  // @ts-ignore\n  private addToHttpParams(\n    httpParams: HttpParams,\n    value: any,\n    key?: string\n  ): HttpParams {\n    if (typeof value === 'object' && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n    return httpParams;\n  }\n\n  private addToHttpParamsRecursive(\n    httpParams: HttpParams,\n    value?: any,\n    key?: string\n  ): HttpParams {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        (value as any[]).forEach(\n          (elem) =>\n            (httpParams = this.addToHttpParamsRecursive(httpParams, elem, key))\n        );\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(\n            key,\n            (value as Date).toISOString().substring(0, 10)\n          );\n        } else {\n          throw Error('key may not be null if value is Date');\n        }\n      } else {\n        Object.keys(value).forEach(\n          (k) =>\n            (httpParams = this.addToHttpParamsRecursive(\n              httpParams,\n              value[k],\n              key != null ? `${key}.${k}` : k\n            ))\n        );\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error('key may not be null if value is not object or array');\n    }\n    return httpParams;\n  }\n\n  /**\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public timeControllerTime(\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<object>;\n  public timeControllerTime(\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<object>>;\n  public timeControllerTime(\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<object>>;\n  public timeControllerTime(\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/time`;\n    return this.httpClient.request<object>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n  HttpParameterCodec,\n  HttpContext,\n} from '@angular/common/http';\nimport { CustomHttpParameterCodec } from '../encoder';\nimport { Observable } from 'rxjs';\n\n// @ts-ignore\nimport { CreateWebhookDtoInterface } from '../model/create-webhook-dto.interface';\n// @ts-ignore\nimport { FindManyWebhookLogResponseInterface } from '../model/find-many-webhook-log-response.interface';\n// @ts-ignore\nimport { FindManyWebhookResponseInterface } from '../model/find-many-webhook-response.interface';\n// @ts-ignore\nimport { FindManyWebhookUserResponseInterface } from '../model/find-many-webhook-user-response.interface';\n// @ts-ignore\nimport { StatusResponseInterface } from '../model/status-response.interface';\n// @ts-ignore\nimport { UpdateWebhookDtoInterface } from '../model/update-webhook-dto.interface';\n// @ts-ignore\nimport { UpdateWebhookUserDtoInterface } from '../model/update-webhook-user-dto.interface';\n// @ts-ignore\nimport { WebhookEventInterface } from '../model/webhook-event.interface';\n// @ts-ignore\nimport { WebhookInterface } from '../model/webhook.interface';\n// @ts-ignore\nimport { WebhookUserInterface } from '../model/webhook-user.interface';\n// @ts-ignore\nimport { WebhookUsersControllerFindMany400ResponseInterface } from '../model/webhook-users-controller-find-many400-response.interface';\n\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { RestClientConfiguration } from '../configuration';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WebhookRestService {\n  protected basePath = 'http://localhost';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new RestClientConfiguration();\n  public encoder: HttpParameterCodec;\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string | string[],\n    @Optional() configuration: RestClientConfiguration\n  ) {\n    if (configuration) {\n      this.configuration = configuration;\n    }\n    if (typeof this.configuration.basePath !== 'string') {\n      const firstBasePath = Array.isArray(basePath) ? basePath[0] : undefined;\n      if (firstBasePath != undefined) {\n        basePath = firstBasePath;\n      }\n\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n      this.configuration.basePath = basePath;\n    }\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  // @ts-ignore\n  private addToHttpParams(\n    httpParams: HttpParams,\n    value: any,\n    key?: string\n  ): HttpParams {\n    if (typeof value === 'object' && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n    return httpParams;\n  }\n\n  private addToHttpParamsRecursive(\n    httpParams: HttpParams,\n    value?: any,\n    key?: string\n  ): HttpParams {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        (value as any[]).forEach(\n          (elem) =>\n            (httpParams = this.addToHttpParamsRecursive(httpParams, elem, key))\n        );\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(\n            key,\n            (value as Date).toISOString().substring(0, 10)\n          );\n        } else {\n          throw Error('key may not be null if value is Date');\n        }\n      } else {\n        Object.keys(value).forEach(\n          (k) =>\n            (httpParams = this.addToHttpParamsRecursive(\n              httpParams,\n              value[k],\n              key != null ? `${key}.${k}` : k\n            ))\n        );\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error('key may not be null if value is not object or array');\n    }\n    return httpParams;\n  }\n\n  /**\n   * @param createWebhookDtoInterface\n   * @param xExternalUserId\n   * @param xExternalTenantId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public webhookControllerCreateOne(\n    createWebhookDtoInterface: CreateWebhookDtoInterface,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<WebhookInterface>;\n  public webhookControllerCreateOne(\n    createWebhookDtoInterface: CreateWebhookDtoInterface,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<WebhookInterface>>;\n  public webhookControllerCreateOne(\n    createWebhookDtoInterface: CreateWebhookDtoInterface,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<WebhookInterface>>;\n  public webhookControllerCreateOne(\n    createWebhookDtoInterface: CreateWebhookDtoInterface,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (\n      createWebhookDtoInterface === null ||\n      createWebhookDtoInterface === undefined\n    ) {\n      throw new Error(\n        'Required parameter createWebhookDtoInterface was null or undefined when calling webhookControllerCreateOne.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n    if (xExternalUserId !== undefined && xExternalUserId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-user-id',\n        String(xExternalUserId)\n      );\n    }\n    if (xExternalTenantId !== undefined && xExternalTenantId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-tenant-id',\n        String(xExternalTenantId)\n      );\n    }\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = ['application/json'];\n    const httpContentTypeSelected: string | undefined =\n      this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Content-Type',\n        httpContentTypeSelected\n      );\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/webhook`;\n    return this.httpClient.request<WebhookInterface>(\n      'post',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        body: createWebhookDtoInterface,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param id\n   * @param xExternalUserId\n   * @param xExternalTenantId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public webhookControllerDeleteOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<StatusResponseInterface>;\n  public webhookControllerDeleteOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<StatusResponseInterface>>;\n  public webhookControllerDeleteOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<StatusResponseInterface>>;\n  public webhookControllerDeleteOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling webhookControllerDeleteOne.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n    if (xExternalUserId !== undefined && xExternalUserId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-user-id',\n        String(xExternalUserId)\n      );\n    }\n    if (xExternalTenantId !== undefined && xExternalTenantId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-tenant-id',\n        String(xExternalTenantId)\n      );\n    }\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/webhook/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'string',\n      dataFormat: undefined,\n    })}`;\n    return this.httpClient.request<StatusResponseInterface>(\n      'delete',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param xExternalUserId\n   * @param xExternalTenantId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public webhookControllerEvents(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<Array<WebhookEventInterface>>;\n  public webhookControllerEvents(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<Array<WebhookEventInterface>>>;\n  public webhookControllerEvents(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<Array<WebhookEventInterface>>>;\n  public webhookControllerEvents(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    let localVarHeaders = this.defaultHeaders;\n    if (xExternalUserId !== undefined && xExternalUserId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-user-id',\n        String(xExternalUserId)\n      );\n    }\n    if (xExternalTenantId !== undefined && xExternalTenantId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-tenant-id',\n        String(xExternalTenantId)\n      );\n    }\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/webhook/events`;\n    return this.httpClient.request<Array<WebhookEventInterface>>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param xExternalUserId\n   * @param xExternalTenantId\n   * @param curPage\n   * @param perPage\n   * @param searchText\n   * @param sort\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public webhookControllerFindMany(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<FindManyWebhookResponseInterface>;\n  public webhookControllerFindMany(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<FindManyWebhookResponseInterface>>;\n  public webhookControllerFindMany(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<FindManyWebhookResponseInterface>>;\n  public webhookControllerFindMany(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    let localVarQueryParameters = new HttpParams({ encoder: this.encoder });\n    if (curPage !== undefined && curPage !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>curPage,\n        'curPage'\n      );\n    }\n    if (perPage !== undefined && perPage !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>perPage,\n        'perPage'\n      );\n    }\n    if (searchText !== undefined && searchText !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>searchText,\n        'searchText'\n      );\n    }\n    if (sort !== undefined && sort !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>sort,\n        'sort'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n    if (xExternalUserId !== undefined && xExternalUserId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-user-id',\n        String(xExternalUserId)\n      );\n    }\n    if (xExternalTenantId !== undefined && xExternalTenantId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-tenant-id',\n        String(xExternalTenantId)\n      );\n    }\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/webhook`;\n    return this.httpClient.request<FindManyWebhookResponseInterface>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        params: localVarQueryParameters,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param id\n   * @param xExternalUserId\n   * @param xExternalTenantId\n   * @param curPage\n   * @param perPage\n   * @param searchText\n   * @param sort\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public webhookControllerFindManyLogs(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<FindManyWebhookLogResponseInterface>;\n  public webhookControllerFindManyLogs(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<FindManyWebhookLogResponseInterface>>;\n  public webhookControllerFindManyLogs(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<FindManyWebhookLogResponseInterface>>;\n  public webhookControllerFindManyLogs(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling webhookControllerFindManyLogs.'\n      );\n    }\n\n    let localVarQueryParameters = new HttpParams({ encoder: this.encoder });\n    if (curPage !== undefined && curPage !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>curPage,\n        'curPage'\n      );\n    }\n    if (perPage !== undefined && perPage !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>perPage,\n        'perPage'\n      );\n    }\n    if (searchText !== undefined && searchText !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>searchText,\n        'searchText'\n      );\n    }\n    if (sort !== undefined && sort !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>sort,\n        'sort'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n    if (xExternalUserId !== undefined && xExternalUserId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-user-id',\n        String(xExternalUserId)\n      );\n    }\n    if (xExternalTenantId !== undefined && xExternalTenantId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-tenant-id',\n        String(xExternalTenantId)\n      );\n    }\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/webhook/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'string',\n      dataFormat: undefined,\n    })}/logs`;\n    return this.httpClient.request<FindManyWebhookLogResponseInterface>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        params: localVarQueryParameters,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param id\n   * @param xExternalUserId\n   * @param xExternalTenantId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public webhookControllerFindOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<WebhookInterface>;\n  public webhookControllerFindOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<WebhookInterface>>;\n  public webhookControllerFindOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<WebhookInterface>>;\n  public webhookControllerFindOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling webhookControllerFindOne.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n    if (xExternalUserId !== undefined && xExternalUserId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-user-id',\n        String(xExternalUserId)\n      );\n    }\n    if (xExternalTenantId !== undefined && xExternalTenantId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-tenant-id',\n        String(xExternalTenantId)\n      );\n    }\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/webhook/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'string',\n      dataFormat: undefined,\n    })}`;\n    return this.httpClient.request<WebhookInterface>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param xExternalUserId\n   * @param xExternalTenantId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public webhookControllerProfile(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<WebhookUserInterface>;\n  public webhookControllerProfile(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<WebhookUserInterface>>;\n  public webhookControllerProfile(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<WebhookUserInterface>>;\n  public webhookControllerProfile(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    let localVarHeaders = this.defaultHeaders;\n    if (xExternalUserId !== undefined && xExternalUserId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-user-id',\n        String(xExternalUserId)\n      );\n    }\n    if (xExternalTenantId !== undefined && xExternalTenantId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-tenant-id',\n        String(xExternalTenantId)\n      );\n    }\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/webhook/profile`;\n    return this.httpClient.request<WebhookUserInterface>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param id\n   * @param updateWebhookDtoInterface\n   * @param xExternalUserId\n   * @param xExternalTenantId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public webhookControllerUpdateOne(\n    id: string,\n    updateWebhookDtoInterface: UpdateWebhookDtoInterface,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<WebhookInterface>;\n  public webhookControllerUpdateOne(\n    id: string,\n    updateWebhookDtoInterface: UpdateWebhookDtoInterface,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<WebhookInterface>>;\n  public webhookControllerUpdateOne(\n    id: string,\n    updateWebhookDtoInterface: UpdateWebhookDtoInterface,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<WebhookInterface>>;\n  public webhookControllerUpdateOne(\n    id: string,\n    updateWebhookDtoInterface: UpdateWebhookDtoInterface,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling webhookControllerUpdateOne.'\n      );\n    }\n    if (\n      updateWebhookDtoInterface === null ||\n      updateWebhookDtoInterface === undefined\n    ) {\n      throw new Error(\n        'Required parameter updateWebhookDtoInterface was null or undefined when calling webhookControllerUpdateOne.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n    if (xExternalUserId !== undefined && xExternalUserId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-user-id',\n        String(xExternalUserId)\n      );\n    }\n    if (xExternalTenantId !== undefined && xExternalTenantId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-tenant-id',\n        String(xExternalTenantId)\n      );\n    }\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = ['application/json'];\n    const httpContentTypeSelected: string | undefined =\n      this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Content-Type',\n        httpContentTypeSelected\n      );\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/webhook/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'string',\n      dataFormat: undefined,\n    })}`;\n    return this.httpClient.request<WebhookInterface>(\n      'put',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        body: updateWebhookDtoInterface,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param id\n   * @param xExternalUserId\n   * @param xExternalTenantId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public webhookUsersControllerDeleteOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<StatusResponseInterface>;\n  public webhookUsersControllerDeleteOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<StatusResponseInterface>>;\n  public webhookUsersControllerDeleteOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<StatusResponseInterface>>;\n  public webhookUsersControllerDeleteOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling webhookUsersControllerDeleteOne.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n    if (xExternalUserId !== undefined && xExternalUserId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-user-id',\n        String(xExternalUserId)\n      );\n    }\n    if (xExternalTenantId !== undefined && xExternalTenantId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-tenant-id',\n        String(xExternalTenantId)\n      );\n    }\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/webhook/users/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'string',\n      dataFormat: undefined,\n    })}`;\n    return this.httpClient.request<StatusResponseInterface>(\n      'delete',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param xExternalUserId\n   * @param xExternalTenantId\n   * @param curPage\n   * @param perPage\n   * @param searchText\n   * @param sort\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public webhookUsersControllerFindMany(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<FindManyWebhookUserResponseInterface>;\n  public webhookUsersControllerFindMany(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<FindManyWebhookUserResponseInterface>>;\n  public webhookUsersControllerFindMany(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<FindManyWebhookUserResponseInterface>>;\n  public webhookUsersControllerFindMany(\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    curPage?: number,\n    perPage?: number,\n    searchText?: string,\n    sort?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    let localVarQueryParameters = new HttpParams({ encoder: this.encoder });\n    if (curPage !== undefined && curPage !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>curPage,\n        'curPage'\n      );\n    }\n    if (perPage !== undefined && perPage !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>perPage,\n        'perPage'\n      );\n    }\n    if (searchText !== undefined && searchText !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>searchText,\n        'searchText'\n      );\n    }\n    if (sort !== undefined && sort !== null) {\n      localVarQueryParameters = this.addToHttpParams(\n        localVarQueryParameters,\n        <any>sort,\n        'sort'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n    if (xExternalUserId !== undefined && xExternalUserId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-user-id',\n        String(xExternalUserId)\n      );\n    }\n    if (xExternalTenantId !== undefined && xExternalTenantId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-tenant-id',\n        String(xExternalTenantId)\n      );\n    }\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/webhook/users`;\n    return this.httpClient.request<FindManyWebhookUserResponseInterface>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        params: localVarQueryParameters,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param id\n   * @param xExternalUserId\n   * @param xExternalTenantId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public webhookUsersControllerFindOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<WebhookUserInterface>;\n  public webhookUsersControllerFindOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<WebhookUserInterface>>;\n  public webhookUsersControllerFindOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<WebhookUserInterface>>;\n  public webhookUsersControllerFindOne(\n    id: string,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling webhookUsersControllerFindOne.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n    if (xExternalUserId !== undefined && xExternalUserId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-user-id',\n        String(xExternalUserId)\n      );\n    }\n    if (xExternalTenantId !== undefined && xExternalTenantId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-tenant-id',\n        String(xExternalTenantId)\n      );\n    }\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/webhook/users/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'string',\n      dataFormat: undefined,\n    })}`;\n    return this.httpClient.request<WebhookUserInterface>(\n      'get',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n\n  /**\n   * @param id\n   * @param updateWebhookUserDtoInterface\n   * @param xExternalUserId\n   * @param xExternalTenantId\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public webhookUsersControllerUpdateOne(\n    id: string,\n    updateWebhookUserDtoInterface: UpdateWebhookUserDtoInterface,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<WebhookUserInterface>;\n  public webhookUsersControllerUpdateOne(\n    id: string,\n    updateWebhookUserDtoInterface: UpdateWebhookUserDtoInterface,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpResponse<WebhookUserInterface>>;\n  public webhookUsersControllerUpdateOne(\n    id: string,\n    updateWebhookUserDtoInterface: UpdateWebhookUserDtoInterface,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<HttpEvent<WebhookUserInterface>>;\n  public webhookUsersControllerUpdateOne(\n    id: string,\n    updateWebhookUserDtoInterface: UpdateWebhookUserDtoInterface,\n    xExternalUserId?: string,\n    xExternalTenantId?: string,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'application/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable<any> {\n    if (id === null || id === undefined) {\n      throw new Error(\n        'Required parameter id was null or undefined when calling webhookUsersControllerUpdateOne.'\n      );\n    }\n    if (\n      updateWebhookUserDtoInterface === null ||\n      updateWebhookUserDtoInterface === undefined\n    ) {\n      throw new Error(\n        'Required parameter updateWebhookUserDtoInterface was null or undefined when calling webhookUsersControllerUpdateOne.'\n      );\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n    if (xExternalUserId !== undefined && xExternalUserId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-user-id',\n        String(xExternalUserId)\n      );\n    }\n    if (xExternalTenantId !== undefined && xExternalTenantId !== null) {\n      localVarHeaders = localVarHeaders.set(\n        'x-external-tenant-id',\n        String(xExternalTenantId)\n      );\n    }\n\n    let localVarHttpHeaderAcceptSelected: string | undefined =\n      options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['application/json'];\n      localVarHttpHeaderAcceptSelected =\n        this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Accept',\n        localVarHttpHeaderAcceptSelected\n      );\n    }\n\n    let localVarHttpContext: HttpContext | undefined =\n      options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined =\n      options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = ['application/json'];\n    const httpContentTypeSelected: string | undefined =\n      this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set(\n        'Content-Type',\n        httpContentTypeSelected\n      );\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (\n        this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)\n      ) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/webhook/users/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'string',\n      dataFormat: undefined,\n    })}`;\n    return this.httpClient.request<WebhookUserInterface>(\n      'put',\n      `${this.configuration.basePath}${localVarPath}`,\n      {\n        context: localVarHttpContext,\n        body: updateWebhookUserDtoInterface,\n        responseType: <any>responseType_,\n        withCredentials: this.configuration.withCredentials,\n        headers: localVarHeaders,\n        observe: observe,\n        transferCache: localVarTransferCache,\n        reportProgress: reportProgress,\n      }\n    );\n  }\n}\n","export * from './app-rest.service';\nimport { AppRestService } from './app-rest.service';\nexport * from './auth-rest.service';\nimport { AuthRestService } from './auth-rest.service';\nexport * from './files-rest.service';\nimport { FilesRestService } from './files-rest.service';\nexport * from './terminus-health-check-rest.service';\nimport { TerminusHealthCheckRestService } from './terminus-health-check-rest.service';\nexport * from './time-rest.service';\nimport { TimeRestService } from './time-rest.service';\nexport * from './webhook-rest.service';\nimport { WebhookRestService } from './webhook-rest.service';\nexport const APIS = [\n  AppRestService,\n  AuthRestService,\n  FilesRestService,\n  TerminusHealthCheckRestService,\n  TimeRestService,\n  WebhookRestService,\n];\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport interface AppDataInterface {\n  message: string;\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport interface AppDemoInterface {\n  id: string;\n  name: string;\n  createdAt: string;\n  updatedAt: string;\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport type AuthErrorEnumInterface = 'AUTH-000' | 'AUTH-001' | 'AUTH-002';\n\nexport const AuthErrorEnumInterface = {\n  _000: 'AUTH-000' as AuthErrorEnumInterface,\n  _001: 'AUTH-001' as AuthErrorEnumInterface,\n  _002: 'AUTH-002' as AuthErrorEnumInterface,\n};\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport type AuthRoleInterface = 'Admin' | 'User';\n\nexport const AuthRoleInterface = {\n  Admin: 'Admin' as AuthRoleInterface,\n  User: 'User' as AuthRoleInterface,\n};\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport type AuthUserScalarFieldEnumInterface =\n  | 'id'\n  | 'externalUserId'\n  | 'userRole'\n  | 'timezone'\n  | 'createdAt'\n  | 'updatedAt'\n  | 'lang';\n\nexport const AuthUserScalarFieldEnumInterface = {\n  id: 'id' as AuthUserScalarFieldEnumInterface,\n  externalUserId: 'externalUserId' as AuthUserScalarFieldEnumInterface,\n  userRole: 'userRole' as AuthUserScalarFieldEnumInterface,\n  timezone: 'timezone' as AuthUserScalarFieldEnumInterface,\n  createdAt: 'createdAt' as AuthUserScalarFieldEnumInterface,\n  updatedAt: 'updatedAt' as AuthUserScalarFieldEnumInterface,\n  lang: 'lang' as AuthUserScalarFieldEnumInterface,\n};\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport interface CreateWebhookDtoInterface {\n  eventName: string;\n  endpoint: string;\n  enabled: boolean;\n  headers?: object | null;\n  requestTimeout?: number | null;\n  workUntilDate?: string | null;\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport type FilesErrorEnumInterface = 'FILES-000' | 'FILES-001';\n\nexport const FilesErrorEnumInterface = {\n  _000: 'FILES-000' as FilesErrorEnumInterface,\n  _001: 'FILES-001' as FilesErrorEnumInterface,\n};\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport interface FindManyResponseMetaInterface {\n  curPage?: number;\n  perPage?: number;\n  totalResults: number;\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport interface PresignedUrlsInterface {\n  downloadUrl: string;\n  uploadUrl: string;\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport interface StatusResponseInterface {\n  message: string;\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport interface TerminusHealthCheckControllerCheck200ResponseInfoValueInterface {\n  [key: string]: any | any;\n\n  status: string;\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport interface UpdateWebhookDtoInterface {\n  eventName?: string;\n  endpoint?: string;\n  enabled?: boolean;\n  headers?: object | null;\n  requestTimeout?: number | null;\n  workUntilDate?: string | null;\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport type ValidationErrorEnumInterface = 'VALIDATION-000';\n\nexport const ValidationErrorEnumInterface = {\n  VALIDATION_000: 'VALIDATION-000' as ValidationErrorEnumInterface,\n};\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport interface ValidationErrorMetadataConstraintInterface {\n  name: string;\n  description: string;\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport type WebhookErrorEnumInterface =\n  | 'WEBHOOK-000'\n  | 'WEBHOOK-001'\n  | 'WEBHOOK-002'\n  | 'WEBHOOK-003'\n  | 'WEBHOOK-004'\n  | 'WEBHOOK-005';\n\nexport const WebhookErrorEnumInterface = {\n  _000: 'WEBHOOK-000' as WebhookErrorEnumInterface,\n  _001: 'WEBHOOK-001' as WebhookErrorEnumInterface,\n  _002: 'WEBHOOK-002' as WebhookErrorEnumInterface,\n  _003: 'WEBHOOK-003' as WebhookErrorEnumInterface,\n  _004: 'WEBHOOK-004' as WebhookErrorEnumInterface,\n  _005: 'WEBHOOK-005' as WebhookErrorEnumInterface,\n};\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport interface WebhookEventInterface {\n  eventName: string;\n  description: string;\n  example: object;\n}\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport type WebhookLogScalarFieldEnumInterface =\n  | 'id'\n  | 'request'\n  | 'responseStatus'\n  | 'response'\n  | 'webhookStatus'\n  | 'webhookId'\n  | 'externalTenantId'\n  | 'createdAt'\n  | 'updatedAt';\n\nexport const WebhookLogScalarFieldEnumInterface = {\n  id: 'id' as WebhookLogScalarFieldEnumInterface,\n  request: 'request' as WebhookLogScalarFieldEnumInterface,\n  responseStatus: 'responseStatus' as WebhookLogScalarFieldEnumInterface,\n  response: 'response' as WebhookLogScalarFieldEnumInterface,\n  webhookStatus: 'webhookStatus' as WebhookLogScalarFieldEnumInterface,\n  webhookId: 'webhookId' as WebhookLogScalarFieldEnumInterface,\n  externalTenantId: 'externalTenantId' as WebhookLogScalarFieldEnumInterface,\n  createdAt: 'createdAt' as WebhookLogScalarFieldEnumInterface,\n  updatedAt: 'updatedAt' as WebhookLogScalarFieldEnumInterface,\n};\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport type WebhookRoleInterface = 'Admin' | 'User';\n\nexport const WebhookRoleInterface = {\n  Admin: 'Admin' as WebhookRoleInterface,\n  User: 'User' as WebhookRoleInterface,\n};\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport type WebhookScalarFieldEnumInterface =\n  | 'id'\n  | 'eventName'\n  | 'endpoint'\n  | 'enabled'\n  | 'headers'\n  | 'requestTimeout'\n  | 'externalTenantId'\n  | 'createdBy'\n  | 'updatedBy'\n  | 'createdAt'\n  | 'updatedAt'\n  | 'workUntilDate';\n\nexport const WebhookScalarFieldEnumInterface = {\n  id: 'id' as WebhookScalarFieldEnumInterface,\n  eventName: 'eventName' as WebhookScalarFieldEnumInterface,\n  endpoint: 'endpoint' as WebhookScalarFieldEnumInterface,\n  enabled: 'enabled' as WebhookScalarFieldEnumInterface,\n  headers: 'headers' as WebhookScalarFieldEnumInterface,\n  requestTimeout: 'requestTimeout' as WebhookScalarFieldEnumInterface,\n  externalTenantId: 'externalTenantId' as WebhookScalarFieldEnumInterface,\n  createdBy: 'createdBy' as WebhookScalarFieldEnumInterface,\n  updatedBy: 'updatedBy' as WebhookScalarFieldEnumInterface,\n  createdAt: 'createdAt' as WebhookScalarFieldEnumInterface,\n  updatedAt: 'updatedAt' as WebhookScalarFieldEnumInterface,\n  workUntilDate: 'workUntilDate' as WebhookScalarFieldEnumInterface,\n};\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport type WebhookStatusInterface =\n  | 'Pending'\n  | 'Process'\n  | 'Success'\n  | 'Error'\n  | 'Timeout';\n\nexport const WebhookStatusInterface = {\n  Pending: 'Pending' as WebhookStatusInterface,\n  Process: 'Process' as WebhookStatusInterface,\n  Success: 'Success' as WebhookStatusInterface,\n  Error: 'Error' as WebhookStatusInterface,\n  Timeout: 'Timeout' as WebhookStatusInterface,\n};\n","/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport type WebhookUserScalarFieldEnumInterface =\n  | 'id'\n  | 'externalTenantId'\n  | 'externalUserId'\n  | 'userRole'\n  | 'createdAt'\n  | 'updatedAt';\n\nexport const WebhookUserScalarFieldEnumInterface = {\n  id: 'id' as WebhookUserScalarFieldEnumInterface,\n  externalTenantId: 'externalTenantId' as WebhookUserScalarFieldEnumInterface,\n  externalUserId: 'externalUserId' as WebhookUserScalarFieldEnumInterface,\n  userRole: 'userRole' as WebhookUserScalarFieldEnumInterface,\n  createdAt: 'createdAt' as WebhookUserScalarFieldEnumInterface,\n  updatedAt: 'updatedAt' as WebhookUserScalarFieldEnumInterface,\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i2.RestClientConfiguration"],"mappings":"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"}