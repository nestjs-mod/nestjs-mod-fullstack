{"version":3,"file":"nestjs-mod-fullstack-auth-angular.mjs","sources":["../../../../../libs/core/auth-angular/src/lib/services/auth-profile-form.service.ts","../../../../../libs/core/auth-angular/src/lib/services/auth-profile-mapper.service.ts","../../../../../libs/core/auth-angular/src/lib/services/auth.configuration.ts","../../../../../libs/core/auth-angular/src/lib/services/authorizer.service.ts","../../../../../libs/core/auth-angular/src/lib/services/tokens.service.ts","../../../../../libs/core/auth-angular/src/lib/services/auth.service.ts","../../../../../libs/core/auth-angular/src/lib/forms/auth-profile-form/auth-profile-form.component.ts","../../../../../libs/core/auth-angular/src/lib/services/auth-sign-in-form.service.ts","../../../../../libs/core/auth-angular/src/lib/services/auth-sign-in-mapper.service.ts","../../../../../libs/core/auth-angular/src/lib/forms/auth-sign-in-form/auth-sign-in-form.component.ts","../../../../../libs/core/auth-angular/src/lib/forms/auth-sign-in-form/auth-sign-in-form.component.html","../../../../../libs/core/auth-angular/src/lib/services/auth-sign-up-form.service.ts","../../../../../libs/core/auth-angular/src/lib/services/auth-sign-up-mapper.service.ts","../../../../../libs/core/auth-angular/src/lib/forms/auth-sign-up-form/auth-sign-up-form.component.ts","../../../../../libs/core/auth-angular/src/lib/forms/auth-sign-up-form/auth-sign-up-form.component.html","../../../../../libs/core/auth-angular/src/lib/services/auth-active-lang.service.ts","../../../../../libs/core/auth-angular/src/lib/services/auth-guard.service.ts","../../../../../libs/core/auth-angular/src/nestjs-mod-fullstack-auth-angular.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { UpdateProfileInput } from '@authorizerdev/authorizer-js';\nimport { TranslocoService } from '@jsverse/transloco';\nimport { ValidationErrorMetadataInterface } from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { ValidationService } from '@nestjs-mod-fullstack/common-angular';\nimport { UntilDestroy } from '@ngneat/until-destroy';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { of } from 'rxjs';\n\n@UntilDestroy()\n@Injectable({ providedIn: 'root' })\nexport class AuthProfileFormService {\n  constructor(\n    protected readonly translocoService: TranslocoService,\n    protected readonly validationService: ValidationService\n  ) {}\n\n  init() {\n    return of(true);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getFormlyFields(options?: {\n    data?: UpdateProfileInput;\n    errors?: ValidationErrorMetadataInterface[];\n  }): FormlyFieldConfig[] {\n    return this.validationService.appendServerErrorsAsValidatorsToFields(\n      [\n        {\n          key: 'picture',\n          type: 'image-file',\n          validation: {\n            show: true,\n          },\n          props: {\n            label: this.translocoService.translate(\n              `auth.profile-form.fields.picture`\n            ),\n            placeholder: 'picture',\n          },\n        },\n        {\n          key: 'old_password',\n          type: 'input',\n          validation: {\n            show: true,\n          },\n          props: {\n            label: this.translocoService.translate(\n              `auth.profile-form.fields.old-password`\n            ),\n            placeholder: 'old_password',\n            type: 'password',\n          },\n        },\n        {\n          key: 'new_password',\n          type: 'input',\n          validation: {\n            show: true,\n          },\n          props: {\n            label: this.translocoService.translate(\n              `auth.profile-form.fields.new-password`\n            ),\n            placeholder: 'new_password',\n            type: 'password',\n          },\n        },\n        {\n          key: 'confirm_new_password',\n          type: 'input',\n          validation: {\n            show: true,\n          },\n          props: {\n            label: this.translocoService.translate(\n              `auth.profile-form.fields.confirm-new-password`\n            ),\n            placeholder: 'confirm_new_password',\n            type: 'password',\n          },\n        },\n      ],\n      options?.errors || []\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UpdateProfileInput } from '@authorizerdev/authorizer-js';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthProfileMapperService {\n  toModel(data: UpdateProfileInput) {\n    return {\n      old_password: data['old_password'],\n      new_password: data['new_password'],\n      confirm_new_password: data['confirm_new_password'],\n      picture: data['picture'],\n    };\n  }\n\n  toJson(data: UpdateProfileInput) {\n    return {\n      old_password: data['old_password'],\n      new_password: data['new_password'],\n      confirm_new_password: data['confirm_new_password'],\n      picture: data['picture'],\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { UpdateProfileInput, User } from '@authorizerdev/authorizer-js';\nimport { Observable } from 'rxjs';\n\nexport type AfterUpdateProfileEvent = {\n  old?: User;\n  new?: User;\n};\n\nexport class AuthConfiguration {\n  constructor(options?: AuthConfiguration) {\n    Object.assign(this, options);\n  }\n\n  beforeUpdateProfile?(\n    data: UpdateProfileInput\n  ): Observable<UpdateProfileInput>;\n\n  afterUpdateProfile?(\n    data: AfterUpdateProfileEvent\n  ): Observable<User | undefined>;\n\n  getAuthorizationHeaders?(): Record<string, string>;\n}\n\nexport const AUTH_CONFIGURATION_TOKEN = new InjectionToken<string>(\n  'AUTH_CONFIGURATION_TOKEN'\n);\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { Authorizer, ConfigType } from '@authorizerdev/authorizer-js';\n\nexport const AUTHORIZER_URL = new InjectionToken<string>('AuthorizerURL');\n\n@Injectable({ providedIn: 'root' })\nexport class AuthorizerService extends Authorizer {\n  constructor(\n    @Inject(AUTHORIZER_URL)\n    private readonly authorizerURL: string\n  ) {\n    super({\n      authorizerURL:\n        // need for override from e2e-tests\n        localStorage.getItem('authorizerURL') ||\n        // use from environments\n        authorizerURL,\n      clientID: '',\n      redirectURL: window.location.origin,\n    } as ConfigType);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthToken } from '@authorizerdev/authorizer-js';\nimport { BehaviorSubject, merge, of } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class TokensService {\n  private tokens$ = new BehaviorSubject<AuthToken | undefined>(undefined);\n\n  getRefreshToken() {\n    return (\n      this.tokens$.value?.refresh_token || localStorage.getItem('refreshToken')\n    );\n  }\n\n  getAccessToken() {\n    return (\n      this.tokens$.value?.access_token || localStorage.getItem('accessToken')\n    );\n  }\n\n  setTokens(tokens: AuthToken) {\n    this.tokens$.next(tokens);\n    if (tokens.refresh_token) {\n      localStorage.setItem('refreshToken', tokens.refresh_token);\n    }\n  }\n\n  getStream() {\n    return merge(of(this.tokens$.value), this.tokens$.asObservable());\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  AuthToken,\n  LoginInput,\n  SignupInput,\n  UpdateProfileInput,\n  User,\n} from '@authorizerdev/authorizer-js';\nimport { mapGraphqlErrors } from '@nestjs-mod-fullstack/common-angular';\nimport {\n  BehaviorSubject,\n  catchError,\n  from,\n  map,\n  mergeMap,\n  of,\n  throwError,\n} from 'rxjs';\nimport {\n  AUTH_CONFIGURATION_TOKEN,\n  AuthConfiguration,\n} from './auth.configuration';\nimport { AuthorizerService } from './authorizer.service';\nimport { TokensService } from './tokens.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  profile$ = new BehaviorSubject<User | undefined>(undefined);\n\n  constructor(\n    protected readonly tokensService: TokensService,\n    @Optional()\n    @Inject(AUTH_CONFIGURATION_TOKEN)\n    protected readonly authConfiguration?: AuthConfiguration,\n    @Optional()\n    protected readonly authorizerService?: AuthorizerService\n  ) {}\n\n  getAuthorizerClientID() {\n    if (!this.authorizerService) {\n      throw new Error('this.authorizerService not set');\n    }\n    return this.authorizerService.config.clientID;\n  }\n\n  setAuthorizerClientID(clientID: string) {\n    if (!this.authorizerService) {\n      throw new Error('this.authorizerService not set');\n    }\n    this.authorizerService.config.clientID = clientID;\n  }\n\n  signUp(data: SignupInput) {\n    if (!this.authorizerService) {\n      return throwError(() => new Error('this.authorizerService not set'));\n    }\n    return from(\n      this.authorizerService.signup({\n        ...data,\n        email: data.email?.toLowerCase(),\n      })\n    ).pipe(\n      mapGraphqlErrors(),\n      mergeMap((result) => {\n        return this.setProfileAndTokens(result).pipe(\n          map((profile) => ({\n            profile,\n            tokens: result,\n          }))\n        );\n      })\n    );\n  }\n\n  updateProfile(data: UpdateProfileInput) {\n    if (!this.authorizerService) {\n      return throwError(() => new Error('this.authorizerService not set'));\n    }\n    const oldProfile = this.profile$.value;\n    return (\n      this.authConfiguration?.beforeUpdateProfile\n        ? this.authConfiguration.beforeUpdateProfile(data)\n        : of(data)\n    ).pipe(\n      mergeMap((data) =>\n        !this.authorizerService\n          ? throwError(() => new Error('this.authorizerService not set'))\n          : from(\n              this.authorizerService.updateProfile(\n                {\n                  ...data,\n                },\n                this.getAuthorizationHeaders()\n              )\n            )\n      ),\n      mapGraphqlErrors(),\n      mergeMap(() =>\n        !this.authorizerService\n          ? throwError(() => new Error('this.authorizerService not set'))\n          : this.authorizerService.getProfile(this.getAuthorizationHeaders())\n      ),\n      mapGraphqlErrors(),\n      mergeMap((result) => this.setProfile(result)),\n      mergeMap((updatedProfile) =>\n        this.authConfiguration?.afterUpdateProfile\n          ? this.authConfiguration.afterUpdateProfile({\n              new: updatedProfile,\n              old: oldProfile,\n            })\n          : of({\n              new: updatedProfile,\n            })\n      )\n    );\n  }\n\n  signIn(data: LoginInput) {\n    if (!this.authorizerService) {\n      return throwError(() => new Error('this.authorizerService not set'));\n    }\n    return from(\n      this.authorizerService.login({\n        ...data,\n        email: data.email?.toLowerCase(),\n      })\n    ).pipe(\n      mapGraphqlErrors(),\n      mergeMap((result) => {\n        return this.setProfileAndTokens(result).pipe(\n          map((profile) => ({\n            profile,\n            tokens: result,\n          }))\n        );\n      })\n    );\n  }\n\n  signOut() {\n    if (!this.authorizerService) {\n      return throwError(() => new Error('this.authorizerService not set'));\n    }\n    return from(\n      this.authorizerService.logout(this.getAuthorizationHeaders())\n    ).pipe(\n      mapGraphqlErrors(),\n      mergeMap(() => {\n        return this.clearProfileAndTokens();\n      })\n    );\n  }\n\n  refreshToken() {\n    if (!this.authorizerService) {\n      return throwError(() => new Error('this.authorizerService not set'));\n    }\n    return from(this.authorizerService.browserLogin()).pipe(\n      mapGraphqlErrors(),\n      mergeMap((result) => {\n        return this.setProfileAndTokens(result);\n      }),\n      catchError((err) => {\n        console.error(err);\n        return this.clearProfileAndTokens();\n      })\n    );\n  }\n\n  clearProfileAndTokens() {\n    return this.setProfileAndTokens({} as AuthToken);\n  }\n\n  setProfileAndTokens(result: AuthToken | undefined) {\n    this.tokensService.setTokens(result as AuthToken);\n    return this.setProfile(result?.user);\n  }\n\n  getAuthorizationHeaders(): Record<string, string> {\n    if (this.authConfiguration?.getAuthorizationHeaders) {\n      return this.authConfiguration.getAuthorizationHeaders();\n    }\n    if (!this.tokensService.getAccessToken()) {\n      return {};\n    }\n    return {\n      Authorization: `Bearer ${this.tokensService.getAccessToken()}`,\n    };\n  }\n\n  setProfile(result: User | undefined) {\n    this.profile$.next(result);\n    return of(result);\n  }\n}\n","import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n  UntypedFormGroup,\n} from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UpdateProfileInput } from '@authorizerdev/authorizer-js';\nimport { TranslocoDirective, TranslocoService } from '@jsverse/transloco';\nimport { ValidationErrorMetadataInterface } from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { ValidationService } from '@nestjs-mod-fullstack/common-angular';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { FormlyFieldConfig, FormlyModule } from '@ngx-formly/core';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NZ_MODAL_DATA } from 'ng-zorro-antd/modal';\nimport { BehaviorSubject, catchError, merge, mergeMap, of, tap } from 'rxjs';\nimport { AuthProfileFormService } from '../../services/auth-profile-form.service';\nimport { AuthProfileMapperService } from '../../services/auth-profile-mapper.service';\nimport { AuthService } from '../../services/auth.service';\n\n@UntilDestroy()\n@Component({\n  imports: [\n    FormlyModule,\n    NzFormModule,\n    NzInputModule,\n    NzButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AsyncPipe,\n    RouterModule,\n    TranslocoDirective,\n  ],\n  selector: 'auth-profile-form',\n  template: `@if (formlyFields$ | async; as formlyFields) {\n    <form nz-form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\n      <formly-form\n        [model]=\"formlyModel$ | async\"\n        [fields]=\"formlyFields\"\n        [form]=\"form\"\n      >\n      </formly-form>\n      @if (!hideButtons) {\n      <nz-form-control>\n        <div class=\"flex justify-between\">\n          <div></div>\n          <button\n            nz-button\n            nzType=\"primary\"\n            type=\"submit\"\n            [disabled]=\"!form.valid\"\n            transloco=\"Update\"\n          ></button>\n        </div>\n      </nz-form-control>\n      }\n    </form>\n    } `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthProfileFormComponent implements OnInit {\n  @Input()\n  hideButtons?: boolean;\n\n  form = new UntypedFormGroup({});\n  formlyModel$ = new BehaviorSubject<object | null>(null);\n  formlyFields$ = new BehaviorSubject<FormlyFieldConfig[] | null>(null);\n\n  constructor(\n    @Optional()\n    @Inject(NZ_MODAL_DATA)\n    private readonly nzModalData: AuthProfileFormComponent,\n    private readonly authService: AuthService,\n    private readonly nzMessageService: NzMessageService,\n    private readonly translocoService: TranslocoService,\n    private readonly authProfileFormService: AuthProfileFormService,\n    private readonly authProfileMapperService: AuthProfileMapperService,\n    private readonly validationService: ValidationService\n  ) {}\n\n  ngOnInit(): void {\n    Object.assign(this, this.nzModalData);\n    merge(\n      this.authProfileFormService.init(),\n      this.translocoService.langChanges$\n    )\n      .pipe(\n        mergeMap(() => {\n          this.fillFromProfile();\n          return of(true);\n        }),\n        untilDestroyed(this)\n      )\n      .subscribe();\n  }\n\n  setFieldsAndModel(data: UpdateProfileInput = {}) {\n    const model = this.authProfileMapperService.toModel(data);\n    this.setFormlyFields({ data: model });\n    this.formlyModel$.next(model);\n  }\n\n  private setFormlyFields(options?: {\n    data?: Partial<UpdateProfileInput>;\n    errors?: ValidationErrorMetadataInterface[];\n  }) {\n    this.formlyFields$.next(\n      this.authProfileFormService.getFormlyFields(options)\n    );\n  }\n\n  submitForm(): void {\n    if (this.form.valid) {\n      const value = this.authProfileMapperService.toJson(this.form.value);\n      this.authService\n        .updateProfile(value)\n        .pipe(\n          tap(() => {\n            this.fillFromProfile();\n            this.nzMessageService.success(\n              this.translocoService.translate('Updated')\n            );\n          }),\n          catchError((err) =>\n            this.validationService.catchAndProcessServerError(err, (options) =>\n              this.setFormlyFields(options)\n            )\n          ),\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          catchError((err: any) => {\n            console.error(err);\n            this.nzMessageService.error(err.message);\n            return of(null);\n          }),\n          untilDestroyed(this)\n        )\n        .subscribe();\n    } else {\n      console.log(this.form.controls);\n      this.nzMessageService.warning(\n        this.translocoService.translate('Validation errors')\n      );\n    }\n  }\n\n  private fillFromProfile() {\n    this.setFieldsAndModel(\n      this.authService.profile$.value as UpdateProfileInput\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoginInput } from '@authorizerdev/authorizer-js';\nimport { TranslocoService } from '@jsverse/transloco';\nimport { ValidationErrorMetadataInterface } from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { ValidationService } from '@nestjs-mod-fullstack/common-angular';\nimport { UntilDestroy } from '@ngneat/until-destroy';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { of } from 'rxjs';\n\n@UntilDestroy()\n@Injectable({ providedIn: 'root' })\nexport class AuthSignInFormService {\n  constructor(\n    protected readonly translocoService: TranslocoService,\n    protected readonly validationService: ValidationService\n  ) {}\n\n  init() {\n    return of(true);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getFormlyFields(options?: {\n    data?: LoginInput;\n    errors?: ValidationErrorMetadataInterface[];\n  }): FormlyFieldConfig[] {\n    return this.validationService.appendServerErrorsAsValidatorsToFields(\n      [\n        {\n          key: 'email',\n          type: 'input',\n          validation: {\n            show: true,\n          },\n          props: {\n            label: this.translocoService.translate(\n              `auth.sign-in-form.fields.email`\n            ),\n            placeholder: 'email',\n            required: true,\n          },\n        },\n        {\n          key: 'password',\n          type: 'input',\n          validation: {\n            show: true,\n          },\n          props: {\n            label: this.translocoService.translate(\n              `auth.sign-in-form.fields.password`\n            ),\n            placeholder: 'password',\n            required: true,\n            type: 'password',\n          },\n        },\n      ],\n      options?.errors || []\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoginInput } from '@authorizerdev/authorizer-js';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthSignInMapperService {\n  toModel(data: LoginInput) {\n    return {\n      email: data['email'],\n      password: data['password'],\n    };\n  }\n\n  toJson(data: LoginInput) {\n    return {\n      email: data['email'],\n      password: data['password'],\n    };\n  }\n}\n","import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n  UntypedFormGroup,\n} from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthToken, LoginInput } from '@authorizerdev/authorizer-js';\nimport { TranslocoDirective, TranslocoService } from '@jsverse/transloco';\nimport { ValidationErrorMetadataInterface } from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { ValidationService } from '@nestjs-mod-fullstack/common-angular';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { FormlyFieldConfig, FormlyModule } from '@ngx-formly/core';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NZ_MODAL_DATA } from 'ng-zorro-antd/modal';\nimport { BehaviorSubject, catchError, of, tap } from 'rxjs';\nimport { AuthSignInFormService } from '../../services/auth-sign-in-form.service';\nimport { AuthSignInMapperService } from '../../services/auth-sign-in-mapper.service';\nimport { AuthService } from '../../services/auth.service';\n\n@UntilDestroy()\n@Component({\n  imports: [\n    FormlyModule,\n    NzFormModule,\n    NzInputModule,\n    NzButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AsyncPipe,\n    RouterModule,\n    TranslocoDirective,\n  ],\n  selector: 'auth-sign-in-form',\n  templateUrl: './auth-sign-in-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthSignInFormComponent implements OnInit {\n  @Input()\n  hideButtons?: boolean;\n\n  @Output()\n  afterSignIn = new EventEmitter<AuthToken>();\n\n  form = new UntypedFormGroup({});\n  formlyModel$ = new BehaviorSubject<object | null>(null);\n  formlyFields$ = new BehaviorSubject<FormlyFieldConfig[] | null>(null);\n\n  constructor(\n    @Optional()\n    @Inject(NZ_MODAL_DATA)\n    private readonly nzModalData: AuthSignInFormComponent,\n    private readonly authService: AuthService,\n    private readonly nzMessageService: NzMessageService,\n    private readonly translocoService: TranslocoService,\n    private readonly authSignInFormService: AuthSignInFormService,\n    private readonly authSignInMapperService: AuthSignInMapperService,\n    private readonly validationService: ValidationService\n  ) {}\n\n  ngOnInit(): void {\n    Object.assign(this, this.nzModalData);\n    this.setFieldsAndModel({ password: '' });\n  }\n\n  setFieldsAndModel(data: LoginInput = { password: '' }) {\n    const model = this.authSignInMapperService.toModel(data);\n    this.setFormlyFields({ data: model });\n    this.formlyModel$.next(model);\n  }\n\n  submitForm(): void {\n    if (this.form.valid) {\n      const value = this.authSignInMapperService.toJson(this.form.value);\n      this.authService\n        .signIn(value)\n        .pipe(\n          tap((result) => {\n            if (result.tokens) {\n              this.afterSignIn.next(result.tokens);\n              this.nzMessageService.success(\n                this.translocoService.translate('Success')\n              );\n            }\n          }),\n          catchError((err) =>\n            this.validationService.catchAndProcessServerError(err, (options) =>\n              this.setFormlyFields(options)\n            )\n          ),\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          catchError((err: any) => {\n            console.error(err);\n            this.nzMessageService.error(err.message);\n            return of(null);\n          }),\n          untilDestroyed(this)\n        )\n        .subscribe();\n    } else {\n      console.log(this.form.controls);\n      this.nzMessageService.warning(\n        this.translocoService.translate('Validation errors')\n      );\n    }\n  }\n\n  private setFormlyFields(options?: {\n    data?: LoginInput;\n    errors?: ValidationErrorMetadataInterface[];\n  }) {\n    this.formlyFields$.next(\n      this.authSignInFormService.getFormlyFields(options)\n    );\n  }\n}\n","@if (formlyFields$ | async; as formlyFields) {\n<form nz-form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\n  <formly-form\n    [model]=\"formlyModel$ | async\"\n    [fields]=\"formlyFields\"\n    [form]=\"form\"\n  >\n  </formly-form>\n  @if (!hideButtons) {\n  <nz-form-control>\n    <div class=\"flex justify-between\">\n      <div>\n        <button\n          nz-button\n          nzType=\"default\"\n          type=\"button\"\n          [routerLink]=\"'/sign-up'\"\n          transloco=\"Sign-up\"\n        ></button>\n      </div>\n      <button\n        nz-button\n        nzType=\"primary\"\n        type=\"submit\"\n        [disabled]=\"!form.valid\"\n        transloco=\"Sign-in\"\n      ></button>\n    </div>\n  </nz-form-control>\n  }\n</form>\n}\n","import { Injectable } from '@angular/core';\nimport { SignupInput } from '@authorizerdev/authorizer-js';\nimport { TranslocoService } from '@jsverse/transloco';\nimport { ValidationErrorMetadataInterface } from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { ValidationService } from '@nestjs-mod-fullstack/common-angular';\nimport { UntilDestroy } from '@ngneat/until-destroy';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { of } from 'rxjs';\n\n@UntilDestroy()\n@Injectable({ providedIn: 'root' })\nexport class AuthSignUpFormService {\n  constructor(\n    protected readonly translocoService: TranslocoService,\n    protected readonly validationService: ValidationService\n  ) {}\n\n  init() {\n    return of(true);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getFormlyFields(options?: {\n    data?: SignupInput;\n    errors?: ValidationErrorMetadataInterface[];\n  }): FormlyFieldConfig[] {\n    return this.validationService.appendServerErrorsAsValidatorsToFields(\n      [\n        {\n          key: 'email',\n          type: 'input',\n          validation: {\n            show: true,\n          },\n          props: {\n            label: this.translocoService.translate(\n              `auth.sign-up-form.fields.email`\n            ),\n            placeholder: 'email',\n            required: true,\n          },\n        },\n        {\n          key: 'password',\n          type: 'input',\n          validation: {\n            show: true,\n          },\n          props: {\n            label: this.translocoService.translate(\n              `auth.sign-up-form.fields.password`\n            ),\n            placeholder: 'password',\n            required: true,\n            type: 'password',\n          },\n        },\n        {\n          key: 'confirm_password',\n          type: 'input',\n          validation: {\n            show: true,\n          },\n          props: {\n            label: this.translocoService.translate(\n              `auth.sign-up-form.fields.confirm-password`\n            ),\n            placeholder: 'confirm_password',\n            required: true,\n            type: 'password',\n          },\n        },\n      ],\n      options?.errors || []\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SignupInput } from '@authorizerdev/authorizer-js';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthSignUpMapperService {\n  toModel(data: SignupInput) {\n    return {\n      email: data['email'],\n      password: data['password'],\n      confirm_password: data['confirm_password'],\n    };\n  }\n\n  toJson(data: SignupInput) {\n    return {\n      email: data['email'],\n      password: data['password'],\n      confirm_password: data['confirm_password'],\n    };\n  }\n}\n","import { AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n  UntypedFormGroup,\n} from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthToken, SignupInput } from '@authorizerdev/authorizer-js';\nimport { TranslocoDirective, TranslocoService } from '@jsverse/transloco';\nimport { ValidationErrorMetadataInterface } from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { ValidationService } from '@nestjs-mod-fullstack/common-angular';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { FormlyFieldConfig, FormlyModule } from '@ngx-formly/core';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NZ_MODAL_DATA } from 'ng-zorro-antd/modal';\nimport { BehaviorSubject, catchError, of, tap } from 'rxjs';\nimport { AuthSignUpFormService } from '../../services/auth-sign-up-form.service';\nimport { AuthSignUpMapperService } from '../../services/auth-sign-up-mapper.service';\nimport { AuthService } from '../../services/auth.service';\n\n@UntilDestroy()\n@Component({\n  imports: [\n    FormlyModule,\n    NzFormModule,\n    NzInputModule,\n    NzButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AsyncPipe,\n    RouterModule,\n    TranslocoDirective,\n  ],\n  selector: 'auth-sign-up-form',\n  templateUrl: './auth-sign-up-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthSignUpFormComponent implements OnInit {\n  @Input()\n  hideButtons?: boolean;\n\n  @Output()\n  afterSignUp = new EventEmitter<AuthToken>();\n\n  form = new UntypedFormGroup({});\n  formlyModel$ = new BehaviorSubject<object | null>(null);\n  formlyFields$ = new BehaviorSubject<FormlyFieldConfig[] | null>(null);\n\n  constructor(\n    @Optional()\n    @Inject(NZ_MODAL_DATA)\n    private readonly nzModalData: AuthSignUpFormComponent,\n    private readonly authService: AuthService,\n    private readonly nzMessageService: NzMessageService,\n    private readonly translocoService: TranslocoService,\n    private readonly authSignUpFormService: AuthSignUpFormService,\n    private readonly authSignUpMapperService: AuthSignUpMapperService,\n    private readonly validationService: ValidationService\n  ) {}\n\n  ngOnInit(): void {\n    Object.assign(this, this.nzModalData);\n    this.setFieldsAndModel({ password: '', confirm_password: '' });\n  }\n\n  setFieldsAndModel(\n    data: SignupInput = { password: '', confirm_password: '' }\n  ) {\n    const model = this.authSignUpMapperService.toModel(data);\n    this.setFormlyFields({ data: model });\n    this.formlyModel$.next(model);\n  }\n\n  submitForm(): void {\n    if (this.form.valid) {\n      const value = this.authSignUpMapperService.toJson(this.form.value);\n      this.authService\n        .signUp({ ...value })\n        .pipe(\n          tap((result) => {\n            if (result.tokens) {\n              this.afterSignUp.next(result.tokens);\n              this.nzMessageService.success(\n                this.translocoService.translate('Success')\n              );\n            }\n          }),\n          catchError((err) =>\n            this.validationService.catchAndProcessServerError(err, (options) =>\n              this.setFormlyFields(options)\n            )\n          ),\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          catchError((err: any) => {\n            console.error(err);\n            this.nzMessageService.error(err.message);\n            return of(null);\n          }),\n          untilDestroyed(this)\n        )\n        .subscribe();\n    } else {\n      console.log(this.form.controls);\n      this.nzMessageService.warning(\n        this.translocoService.translate('Validation errors')\n      );\n    }\n  }\n\n  private setFormlyFields(options?: {\n    data?: SignupInput;\n    errors?: ValidationErrorMetadataInterface[];\n  }) {\n    this.formlyFields$.next(\n      this.authSignUpFormService.getFormlyFields(options)\n    );\n  }\n}\n","@if (formlyFields$ | async; as formlyFields) {\n<form nz-form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\n  <formly-form\n    [model]=\"formlyModel$ | async\"\n    [fields]=\"formlyFields\"\n    [form]=\"form\"\n  >\n  </formly-form>\n  @if (!hideButtons) {\n  <nz-form-control>\n    <div class=\"flex justify-between\">\n      <div>\n        <button\n          nz-button\n          nzType=\"default\"\n          type=\"button\"\n          [routerLink]=\"'/sign-in'\"\n          transloco=\"Sign-in\"\n        ></button>\n      </div>\n      <button\n        nz-button\n        nzType=\"primary\"\n        type=\"submit\"\n        [disabled]=\"!form.valid\"\n        transloco=\"Sign-up\"\n      ></button>\n    </div>\n  </nz-form-control>\n  }\n</form>\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { TranslocoService } from '@jsverse/transloco';\nimport {\n  LangToLocaleMapping,\n  TRANSLOCO_LOCALE_LANG_MAPPING,\n} from '@jsverse/transloco-locale';\nimport {\n  AuthErrorEnumInterface,\n  AuthErrorInterface,\n  AuthRestService,\n} from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { ActiveLangService } from '@nestjs-mod-fullstack/common-angular';\nimport { catchError, map, of, tap, throwError } from 'rxjs';\n\nconst AUTH_ACTIVE_LANG_LOCAL_STORAGE_KEY = 'activeLang';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthActiveLangService {\n  constructor(\n    private readonly authRestService: AuthRestService,\n    private readonly translocoService: TranslocoService,\n    @Inject(TRANSLOCO_LOCALE_LANG_MAPPING)\n    readonly langToLocaleMapping: LangToLocaleMapping,\n    private readonly activeLangService: ActiveLangService\n  ) {}\n\n  getActiveLang() {\n    return this.authRestService.authControllerProfile().pipe(\n      map((profile) => {\n        return profile.lang || this.translocoService.getDefaultLang();\n      }),\n      catchError((err) => {\n        if (\n          'error' in err &&\n          (err.error as AuthErrorInterface).code === AuthErrorEnumInterface._001\n        ) {\n          return of(\n            localStorage.getItem(AUTH_ACTIVE_LANG_LOCAL_STORAGE_KEY) ||\n              this.translocoService.getDefaultLang()\n          );\n        }\n        return throwError(() => err);\n      })\n    );\n  }\n\n  setActiveLang(lang: string) {\n    return this.authRestService.authControllerUpdateProfile({ lang }).pipe(\n      tap(() => {\n        this.activeLangService.applyActiveLang(lang);\n      }),\n      catchError((err) => {\n        if (\n          'error' in err &&\n          (err.error as AuthErrorInterface).code === AuthErrorEnumInterface._001\n        ) {\n          localStorage.setItem(AUTH_ACTIVE_LANG_LOCAL_STORAGE_KEY, lang);\n\n          this.activeLangService.applyActiveLang(lang);\n\n          return of(null);\n        }\n        return throwError(() => err);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { of } from 'rxjs';\nimport { AuthService } from './auth.service';\nexport const AUTH_GUARD_DATA_ROUTE_KEY = 'authGuardData';\n\nexport class AuthGuardData {\n  roles?: string[];\n\n  constructor(options?: AuthGuardData) {\n    Object.assign(this, options);\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuardService implements CanActivate {\n  constructor(private readonly authAuthService: AuthService) {}\n  canActivate(route: ActivatedRouteSnapshot) {\n    if (route.data[AUTH_GUARD_DATA_ROUTE_KEY] instanceof AuthGuardData) {\n      const authGuardData = route.data[AUTH_GUARD_DATA_ROUTE_KEY];\n      const authUser = this.authAuthService.profile$.value;\n      const authGuardDataRoles = (authGuardData.roles || []).map((role) =>\n        role.toLowerCase()\n      );\n      return of(\n        Boolean(\n          (authUser &&\n            authGuardDataRoles.length > 0 &&\n            authGuardDataRoles.some((r) => authUser.roles?.includes(r))) ||\n            (authGuardDataRoles.length === 0 && !authUser?.roles)\n        )\n      );\n    }\n    return of(true);\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i2.AuthorizerService","i1.AuthService","i2","i3","i4.AuthProfileFormService","i5.AuthProfileMapperService","i6","i4.AuthSignInFormService","i5.AuthSignInMapperService","i4.AuthSignUpFormService","i5.AuthSignUpMapperService"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWa,IAAA,sBAAsB,GAA5B,MAAM,sBAAsB,CAAA;AAEZ,IAAA,gBAAA;AACA,IAAA,iBAAA;IAFrB,WACqB,CAAA,gBAAkC,EAClC,iBAAoC,EAAA;QADpC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB;QAChB,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB;;IAGtC,IAAI,GAAA;AACF,QAAA,OAAO,EAAE,CAAC,IAAI,CAAC;;;AAIjB,IAAA,eAAe,CAAC,OAGf,EAAA;AACC,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,sCAAsC,CAClE;AACE,YAAA;AACE,gBAAA,GAAG,EAAE,SAAS;AACd,gBAAA,IAAI,EAAE,YAAY;AAClB,gBAAA,UAAU,EAAE;AACV,oBAAA,IAAI,EAAE,IAAI;AACX,iBAAA;AACD,gBAAA,KAAK,EAAE;oBACL,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CACpC,kCAAkC,CACnC;AACD,oBAAA,WAAW,EAAE,SAAS;AACvB,iBAAA;AACF,aAAA;AACD,YAAA;AACE,gBAAA,GAAG,EAAE,cAAc;AACnB,gBAAA,IAAI,EAAE,OAAO;AACb,gBAAA,UAAU,EAAE;AACV,oBAAA,IAAI,EAAE,IAAI;AACX,iBAAA;AACD,gBAAA,KAAK,EAAE;oBACL,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CACpC,uCAAuC,CACxC;AACD,oBAAA,WAAW,EAAE,cAAc;AAC3B,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA;AACE,gBAAA,GAAG,EAAE,cAAc;AACnB,gBAAA,IAAI,EAAE,OAAO;AACb,gBAAA,UAAU,EAAE;AACV,oBAAA,IAAI,EAAE,IAAI;AACX,iBAAA;AACD,gBAAA,KAAK,EAAE;oBACL,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CACpC,uCAAuC,CACxC;AACD,oBAAA,WAAW,EAAE,cAAc;AAC3B,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA;AACE,gBAAA,GAAG,EAAE,sBAAsB;AAC3B,gBAAA,IAAI,EAAE,OAAO;AACb,gBAAA,UAAU,EAAE;AACV,oBAAA,IAAI,EAAE,IAAI;AACX,iBAAA;AACD,gBAAA,KAAK,EAAE;oBACL,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CACpC,+CAA+C,CAChD;AACD,oBAAA,WAAW,EAAE,sBAAsB;AACnC,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACF,SAAA,EACD,OAAO,EAAE,MAAM,IAAI,EAAE,CACtB;;uGA1EQ,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AAAtB,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,cADT,MAAM,EAAA,CAAA;;AACnB,sBAAsB,GAAA,UAAA,CAAA;AAFlC,IAAA,YAAY,EAAE;qCAI0B,gBAAgB;QACf,iBAAiB,CAAA;AAH9C,CAAA,EAAA,sBAAsB,CA4ElC;2FA5EY,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBADlC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;MCNrB,wBAAwB,CAAA;AACnC,IAAA,OAAO,CAAC,IAAwB,EAAA;QAC9B,OAAO;AACL,YAAA,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC;AAClC,YAAA,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC;AAClC,YAAA,oBAAoB,EAAE,IAAI,CAAC,sBAAsB,CAAC;AAClD,YAAA,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC;SACzB;;AAGH,IAAA,MAAM,CAAC,IAAwB,EAAA;QAC7B,OAAO;AACL,YAAA,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC;AAClC,YAAA,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC;AAClC,YAAA,oBAAoB,EAAE,IAAI,CAAC,sBAAsB,CAAC;AAClD,YAAA,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC;SACzB;;uGAhBQ,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AAAxB,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,cADX,MAAM,EAAA,CAAA;;2FACnB,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBADpC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;MCMrB,iBAAiB,CAAA;AAC5B,IAAA,WAAA,CAAY,OAA2B,EAAA;AACrC,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC;;AAY/B;MAEY,wBAAwB,GAAG,IAAI,cAAc,CACxD,0BAA0B;;MCvBf,cAAc,GAAG,IAAI,cAAc,CAAS,eAAe;AAGlE,MAAO,iBAAkB,SAAQ,UAAU,CAAA;AAG5B,IAAA,aAAA;AAFnB,IAAA,WAAA,CAEmB,aAAqB,EAAA;AAEtC,QAAA,KAAK,CAAC;YACJ,aAAa;;AAEX,YAAA,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;;gBAErC,aAAa;AACf,YAAA,QAAQ,EAAE,EAAE;AACZ,YAAA,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM;AACtB,SAAA,CAAC;QAVC,IAAa,CAAA,aAAA,GAAb,aAAa;;AAHrB,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,kBAElB,cAAc,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AAFb,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cADJ,MAAM,EAAA,CAAA;;2FACnB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;0BAG7B,MAAM;2BAAC,cAAc;;;MCHb,aAAa,CAAA;AAChB,IAAA,OAAO,GAAG,IAAI,eAAe,CAAwB,SAAS,CAAC;IAEvE,eAAe,GAAA;AACb,QAAA,QACE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,aAAa,IAAI,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC;;IAI7E,cAAc,GAAA;AACZ,QAAA,QACE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,YAAY,IAAI,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC;;AAI3E,IAAA,SAAS,CAAC,MAAiB,EAAA;AACzB,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;AACzB,QAAA,IAAI,MAAM,CAAC,aAAa,EAAE;YACxB,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,aAAa,CAAC;;;IAI9D,SAAS,GAAA;AACP,QAAA,OAAO,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;;uGAvBxD,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AAAb,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,cADA,MAAM,EAAA,CAAA;;2FACnB,aAAa,EAAA,UAAA,EAAA,CAAA;kBADzB,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;MCsBrB,WAAW,CAAA;AAID,IAAA,aAAA;AAGA,IAAA,iBAAA;AAEA,IAAA,iBAAA;AARrB,IAAA,QAAQ,GAAG,IAAI,eAAe,CAAmB,SAAS,CAAC;AAE3D,IAAA,WAAA,CACqB,aAA4B,EAG5B,iBAAqC,EAErC,iBAAqC,EAAA;QALrC,IAAa,CAAA,aAAA,GAAb,aAAa;QAGb,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB;QAEjB,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB;;IAGtC,qBAAqB,GAAA;AACnB,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;AAC3B,YAAA,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC;;AAEnD,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ;;AAG/C,IAAA,qBAAqB,CAAC,QAAgB,EAAA;AACpC,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;AAC3B,YAAA,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC;;QAEnD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ;;AAGnD,IAAA,MAAM,CAAC,IAAiB,EAAA;AACtB,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,OAAO,UAAU,CAAC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;;AAEtE,QAAA,OAAO,IAAI,CACT,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;AAC5B,YAAA,GAAG,IAAI;AACP,YAAA,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE;AACjC,SAAA,CAAC,CACH,CAAC,IAAI,CACJ,gBAAgB,EAAE,EAClB,QAAQ,CAAC,CAAC,MAAM,KAAI;AAClB,YAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,IAAI,CAC1C,GAAG,CAAC,CAAC,OAAO,MAAM;gBAChB,OAAO;AACP,gBAAA,MAAM,EAAE,MAAM;aACf,CAAC,CAAC,CACJ;SACF,CAAC,CACH;;AAGH,IAAA,aAAa,CAAC,IAAwB,EAAA;AACpC,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,OAAO,UAAU,CAAC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;;AAEtE,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK;AACtC,QAAA,OAAO,CACL,IAAI,CAAC,iBAAiB,EAAE;cACpB,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,IAAI;AACjD,cAAE,EAAE,CAAC,IAAI,CAAC,EACZ,IAAI,CACJ,QAAQ,CAAC,CAAC,IAAI,KACZ,CAAC,IAAI,CAAC;cACF,UAAU,CAAC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC;cAC5D,IAAI,CACF,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAClC;AACE,gBAAA,GAAG,IAAI;AACR,aAAA,EACD,IAAI,CAAC,uBAAuB,EAAE,CAC/B,CACF,CACN,EACD,gBAAgB,EAAE,EAClB,QAAQ,CAAC,MACP,CAAC,IAAI,CAAC;cACF,UAAU,CAAC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC;AAC9D,cAAE,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CACtE,EACD,gBAAgB,EAAE,EAClB,QAAQ,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAC7C,QAAQ,CAAC,CAAC,cAAc,KACtB,IAAI,CAAC,iBAAiB,EAAE;AACtB,cAAE,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;AACxC,gBAAA,GAAG,EAAE,cAAc;AACnB,gBAAA,GAAG,EAAE,UAAU;aAChB;cACD,EAAE,CAAC;AACD,gBAAA,GAAG,EAAE,cAAc;aACpB,CAAC,CACP,CACF;;AAGH,IAAA,MAAM,CAAC,IAAgB,EAAA;AACrB,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,OAAO,UAAU,CAAC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;;AAEtE,QAAA,OAAO,IAAI,CACT,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;AAC3B,YAAA,GAAG,IAAI;AACP,YAAA,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE;AACjC,SAAA,CAAC,CACH,CAAC,IAAI,CACJ,gBAAgB,EAAE,EAClB,QAAQ,CAAC,CAAC,MAAM,KAAI;AAClB,YAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,IAAI,CAC1C,GAAG,CAAC,CAAC,OAAO,MAAM;gBAChB,OAAO;AACP,gBAAA,MAAM,EAAE,MAAM;aACf,CAAC,CAAC,CACJ;SACF,CAAC,CACH;;IAGH,OAAO,GAAA;AACL,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,OAAO,UAAU,CAAC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;;QAEtE,OAAO,IAAI,CACT,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAC9D,CAAC,IAAI,CACJ,gBAAgB,EAAE,EAClB,QAAQ,CAAC,MAAK;AACZ,YAAA,OAAO,IAAI,CAAC,qBAAqB,EAAE;SACpC,CAAC,CACH;;IAGH,YAAY,GAAA;AACV,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,OAAO,UAAU,CAAC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;;QAEtE,OAAO,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC,CAAC,IAAI,CACrD,gBAAgB,EAAE,EAClB,QAAQ,CAAC,CAAC,MAAM,KAAI;AAClB,YAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;AACzC,SAAC,CAAC,EACF,UAAU,CAAC,CAAC,GAAG,KAAI;AACjB,YAAA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;AAClB,YAAA,OAAO,IAAI,CAAC,qBAAqB,EAAE;SACpC,CAAC,CACH;;IAGH,qBAAqB,GAAA;AACnB,QAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,EAAe,CAAC;;AAGlD,IAAA,mBAAmB,CAAC,MAA6B,EAAA;AAC/C,QAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAmB,CAAC;QACjD,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC;;IAGtC,uBAAuB,GAAA;AACrB,QAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,uBAAuB,EAAE;AACnD,YAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,EAAE;;QAEzD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,EAAE;AACxC,YAAA,OAAO,EAAE;;QAEX,OAAO;YACL,aAAa,EAAE,UAAU,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAE,CAAA;SAC/D;;AAGH,IAAA,UAAU,CAAC,MAAwB,EAAA;AACjC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AAC1B,QAAA,OAAO,EAAE,CAAC,MAAM,CAAC;;AAtKR,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,4CAMZ,wBAAwB,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,iBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AANvB,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,cADE,MAAM,EAAA,CAAA;;2FACnB,WAAW,EAAA,UAAA,EAAA,CAAA;kBADvB,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;0BAM7B;;0BACA,MAAM;2BAAC,wBAAwB;;0BAE/B;;;ACqCQ,IAAA,wBAAwB,GAA9B,MAAM,wBAAwB,CAAA;AAWhB,IAAA,WAAA;AACA,IAAA,WAAA;AACA,IAAA,gBAAA;AACA,IAAA,gBAAA;AACA,IAAA,sBAAA;AACA,IAAA,wBAAA;AACA,IAAA,iBAAA;AAfnB,IAAA,WAAW;AAEX,IAAA,IAAI,GAAG,IAAI,gBAAgB,CAAC,EAAE,CAAC;AAC/B,IAAA,YAAY,GAAG,IAAI,eAAe,CAAgB,IAAI,CAAC;AACvD,IAAA,aAAa,GAAG,IAAI,eAAe,CAA6B,IAAI,CAAC;AAErE,IAAA,WAAA,CAGmB,WAAqC,EACrC,WAAwB,EACxB,gBAAkC,EAClC,gBAAkC,EAClC,sBAA8C,EAC9C,wBAAkD,EAClD,iBAAoC,EAAA;QANpC,IAAW,CAAA,WAAA,GAAX,WAAW;QACX,IAAW,CAAA,WAAA,GAAX,WAAW;QACX,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB;QAChB,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB;QAChB,IAAsB,CAAA,sBAAA,GAAtB,sBAAsB;QACtB,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB;QACxB,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB;;IAGpC,QAAQ,GAAA;QACN,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC;AACrC,QAAA,KAAK,CACH,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,EAClC,IAAI,CAAC,gBAAgB,CAAC,YAAY;AAEjC,aAAA,IAAI,CACH,QAAQ,CAAC,MAAK;YACZ,IAAI,CAAC,eAAe,EAAE;AACtB,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC;AACjB,SAAC,CAAC,EACF,cAAc,CAAC,IAAI,CAAC;AAErB,aAAA,SAAS,EAAE;;IAGhB,iBAAiB,CAAC,OAA2B,EAAE,EAAA;QAC7C,MAAM,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,IAAI,CAAC;QACzD,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AACrC,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;;AAGvB,IAAA,eAAe,CAAC,OAGvB,EAAA;AACC,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,OAAO,CAAC,CACrD;;IAGH,UAAU,GAAA;AACR,QAAA,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACnB,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AACnE,YAAA,IAAI,CAAC;iBACF,aAAa,CAAC,KAAK;AACnB,iBAAA,IAAI,CACH,GAAG,CAAC,MAAK;gBACP,IAAI,CAAC,eAAe,EAAE;AACtB,gBAAA,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC3B,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,SAAS,CAAC,CAC3C;AACH,aAAC,CAAC,EACF,UAAU,CAAC,CAAC,GAAG,KACb,IAAI,CAAC,iBAAiB,CAAC,0BAA0B,CAAC,GAAG,EAAE,CAAC,OAAO,KAC7D,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAC9B,CACF;;AAED,YAAA,UAAU,CAAC,CAAC,GAAQ,KAAI;AACtB,gBAAA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;gBAClB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;AACxC,gBAAA,OAAO,EAAE,CAAC,IAAI,CAAC;AACjB,aAAC,CAAC,EACF,cAAc,CAAC,IAAI,CAAC;AAErB,iBAAA,SAAS,EAAE;;aACT;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC/B,YAAA,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC3B,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,CAAC,CACrD;;;IAIG,eAAe,GAAA;QACrB,IAAI,CAAC,iBAAiB,CACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAA2B,CACtD;;AAxFQ,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,kBAUzB,aAAa,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,sBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;AAVZ,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,EA1BzB,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBL,MAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAlCH,YAAY,EACZ,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,YAAY,EACZ,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,+CAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,SAAA,EAAA,UAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,YAAA,EAAA,mBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,aAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,cAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,YAAA,EAAA,mBAAA,EAAA,eAAA,EAAA,kBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,aAAa,8BACb,cAAc,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,SAAA,EAAA,QAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,2BAAA,EAAA,QAAA,EAAA,8IAAA,EAAA,MAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2EAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EACd,WAAW,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EACX,mBAAmB,EACnB,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,SAAS,EACT,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,YAAY,+BACZ,kBAAkB,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,qBAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA;;AA6BT,wBAAwB,GAAA,UAAA,CAAA;AAxCpC,IAAA,YAAY,EAAE;qCAmDmB,wBAAwB;QACxB,WAAW;QACN,gBAAgB;QAChB,gBAAgB;QACV,sBAAsB;QACpB,wBAAwB;QAC/B,iBAAiB,CAAA;AAjB5C,CAAA,EAAA,wBAAwB,CA0FpC;2FA1FY,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAvCpC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,aAAa;wBACb,cAAc;wBACd,WAAW;wBACX,mBAAmB;wBACnB,SAAS;wBACT,YAAY;wBACZ,kBAAkB;AACnB,qBAAA;AACD,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,QAAQ,EAAE,CAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBL,MAAA,CAAA;oBACL,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,iBAAA;;0BAUI;;0BACA,MAAM;2BAAC,aAAa;sOARvB,WAAW,EAAA,CAAA;sBADV;;;AC7DU,IAAA,qBAAqB,GAA3B,MAAM,qBAAqB,CAAA;AAEX,IAAA,gBAAA;AACA,IAAA,iBAAA;IAFrB,WACqB,CAAA,gBAAkC,EAClC,iBAAoC,EAAA;QADpC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB;QAChB,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB;;IAGtC,IAAI,GAAA;AACF,QAAA,OAAO,EAAE,CAAC,IAAI,CAAC;;;AAIjB,IAAA,eAAe,CAAC,OAGf,EAAA;AACC,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,sCAAsC,CAClE;AACE,YAAA;AACE,gBAAA,GAAG,EAAE,OAAO;AACZ,gBAAA,IAAI,EAAE,OAAO;AACb,gBAAA,UAAU,EAAE;AACV,oBAAA,IAAI,EAAE,IAAI;AACX,iBAAA;AACD,gBAAA,KAAK,EAAE;oBACL,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CACpC,gCAAgC,CACjC;AACD,oBAAA,WAAW,EAAE,OAAO;AACpB,oBAAA,QAAQ,EAAE,IAAI;AACf,iBAAA;AACF,aAAA;AACD,YAAA;AACE,gBAAA,GAAG,EAAE,UAAU;AACf,gBAAA,IAAI,EAAE,OAAO;AACb,gBAAA,UAAU,EAAE;AACV,oBAAA,IAAI,EAAE,IAAI;AACX,iBAAA;AACD,gBAAA,KAAK,EAAE;oBACL,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CACpC,mCAAmC,CACpC;AACD,oBAAA,WAAW,EAAE,UAAU;AACvB,oBAAA,QAAQ,EAAE,IAAI;AACd,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACF,SAAA,EACD,OAAO,EAAE,MAAM,IAAI,EAAE,CACtB;;uGAhDQ,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AAArB,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,cADR,MAAM,EAAA,CAAA;;AACnB,qBAAqB,GAAA,UAAA,CAAA;AAFjC,IAAA,YAAY,EAAE;qCAI0B,gBAAgB;QACf,iBAAiB,CAAA;AAH9C,CAAA,EAAA,qBAAqB,CAkDjC;2FAlDY,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;MCNrB,uBAAuB,CAAA;AAClC,IAAA,OAAO,CAAC,IAAgB,EAAA;QACtB,OAAO;AACL,YAAA,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;AACpB,YAAA,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC;SAC3B;;AAGH,IAAA,MAAM,CAAC,IAAgB,EAAA;QACrB,OAAO;AACL,YAAA,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;AACpB,YAAA,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC;SAC3B;;uGAZQ,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AAAvB,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,cADV,MAAM,EAAA,CAAA;;2FACnB,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBADnC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;AC+CrB,IAAA,uBAAuB,GAA7B,MAAM,uBAAuB,CAAA;AAcf,IAAA,WAAA;AACA,IAAA,WAAA;AACA,IAAA,gBAAA;AACA,IAAA,gBAAA;AACA,IAAA,qBAAA;AACA,IAAA,uBAAA;AACA,IAAA,iBAAA;AAlBnB,IAAA,WAAW;AAGX,IAAA,WAAW,GAAG,IAAI,YAAY,EAAa;AAE3C,IAAA,IAAI,GAAG,IAAI,gBAAgB,CAAC,EAAE,CAAC;AAC/B,IAAA,YAAY,GAAG,IAAI,eAAe,CAAgB,IAAI,CAAC;AACvD,IAAA,aAAa,GAAG,IAAI,eAAe,CAA6B,IAAI,CAAC;AAErE,IAAA,WAAA,CAGmB,WAAoC,EACpC,WAAwB,EACxB,gBAAkC,EAClC,gBAAkC,EAClC,qBAA4C,EAC5C,uBAAgD,EAChD,iBAAoC,EAAA;QANpC,IAAW,CAAA,WAAA,GAAX,WAAW;QACX,IAAW,CAAA,WAAA,GAAX,WAAW;QACX,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB;QAChB,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB;QAChB,IAAqB,CAAA,qBAAA,GAArB,qBAAqB;QACrB,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB;QACvB,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB;;IAGpC,QAAQ,GAAA;QACN,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;;AAG1C,IAAA,iBAAiB,CAAC,IAAmB,GAAA,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAA;QACnD,MAAM,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,CAAC;QACxD,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AACrC,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;;IAG/B,UAAU,GAAA;AACR,QAAA,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACnB,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AAClE,YAAA,IAAI,CAAC;iBACF,MAAM,CAAC,KAAK;AACZ,iBAAA,IAAI,CACH,GAAG,CAAC,CAAC,MAAM,KAAI;AACb,gBAAA,IAAI,MAAM,CAAC,MAAM,EAAE;oBACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AACpC,oBAAA,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC3B,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,SAAS,CAAC,CAC3C;;AAEL,aAAC,CAAC,EACF,UAAU,CAAC,CAAC,GAAG,KACb,IAAI,CAAC,iBAAiB,CAAC,0BAA0B,CAAC,GAAG,EAAE,CAAC,OAAO,KAC7D,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAC9B,CACF;;AAED,YAAA,UAAU,CAAC,CAAC,GAAQ,KAAI;AACtB,gBAAA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;gBAClB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;AACxC,gBAAA,OAAO,EAAE,CAAC,IAAI,CAAC;AACjB,aAAC,CAAC,EACF,cAAc,CAAC,IAAI,CAAC;AAErB,iBAAA,SAAS,EAAE;;aACT;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC/B,YAAA,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC3B,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,CAAC,CACrD;;;AAIG,IAAA,eAAe,CAAC,OAGvB,EAAA;AACC,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,OAAO,CAAC,CACpD;;AA5EQ,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,kBAaxB,aAAa,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAL,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAI,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,uBAAA,EAAA,EAAA,EAAA,KAAA,EAAAF,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;AAbZ,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,8JClDpC,gwBAgCA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EDII,YAAY,EACZ,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,YAAY,4vBACZ,aAAa,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EACb,cAAc,EACd,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,SAAA,EAAA,QAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,2BAAA,EAAA,QAAA,EAAA,8IAAA,EAAA,MAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2EAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,WAAW,qSACX,mBAAmB,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EACnB,SAAS,EACT,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,YAAY,iRACZ,kBAAkB,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,qBAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA;;AAMT,uBAAuB,GAAA,UAAA,CAAA;AAjBnC,IAAA,YAAY,EAAE;qCA+BmB,uBAAuB;QACvB,WAAW;QACN,gBAAgB;QAChB,gBAAgB;QACX,qBAAqB;QACnB,uBAAuB;QAC7B,iBAAiB,CAAA;AApB5C,CAAA,EAAA,uBAAuB,CA8EnC;2FA9EY,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAhBnC,SAAS;AACC,YAAA,IAAA,EAAA,CAAA,EAAA,OAAA,EAAA;wBACP,YAAY;wBACZ,YAAY;wBACZ,aAAa;wBACb,cAAc;wBACd,WAAW;wBACX,mBAAmB;wBACnB,SAAS;wBACT,YAAY;wBACZ,kBAAkB;AACnB,qBAAA,EAAA,QAAA,EACS,mBAAmB,EAAA,eAAA,EAEZ,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,gwBAAA,EAAA;;0BAc5C;;0BACA,MAAM;2BAAC,aAAa;oOAXvB,WAAW,EAAA,CAAA;sBADV;gBAID,WAAW,EAAA,CAAA;sBADV;;;AE3CU,IAAA,qBAAqB,GAA3B,MAAM,qBAAqB,CAAA;AAEX,IAAA,gBAAA;AACA,IAAA,iBAAA;IAFrB,WACqB,CAAA,gBAAkC,EAClC,iBAAoC,EAAA;QADpC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB;QAChB,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB;;IAGtC,IAAI,GAAA;AACF,QAAA,OAAO,EAAE,CAAC,IAAI,CAAC;;;AAIjB,IAAA,eAAe,CAAC,OAGf,EAAA;AACC,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,sCAAsC,CAClE;AACE,YAAA;AACE,gBAAA,GAAG,EAAE,OAAO;AACZ,gBAAA,IAAI,EAAE,OAAO;AACb,gBAAA,UAAU,EAAE;AACV,oBAAA,IAAI,EAAE,IAAI;AACX,iBAAA;AACD,gBAAA,KAAK,EAAE;oBACL,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CACpC,gCAAgC,CACjC;AACD,oBAAA,WAAW,EAAE,OAAO;AACpB,oBAAA,QAAQ,EAAE,IAAI;AACf,iBAAA;AACF,aAAA;AACD,YAAA;AACE,gBAAA,GAAG,EAAE,UAAU;AACf,gBAAA,IAAI,EAAE,OAAO;AACb,gBAAA,UAAU,EAAE;AACV,oBAAA,IAAI,EAAE,IAAI;AACX,iBAAA;AACD,gBAAA,KAAK,EAAE;oBACL,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CACpC,mCAAmC,CACpC;AACD,oBAAA,WAAW,EAAE,UAAU;AACvB,oBAAA,QAAQ,EAAE,IAAI;AACd,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACD,YAAA;AACE,gBAAA,GAAG,EAAE,kBAAkB;AACvB,gBAAA,IAAI,EAAE,OAAO;AACb,gBAAA,UAAU,EAAE;AACV,oBAAA,IAAI,EAAE,IAAI;AACX,iBAAA;AACD,gBAAA,KAAK,EAAE;oBACL,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CACpC,2CAA2C,CAC5C;AACD,oBAAA,WAAW,EAAE,kBAAkB;AAC/B,oBAAA,QAAQ,EAAE,IAAI;AACd,oBAAA,IAAI,EAAE,UAAU;AACjB,iBAAA;AACF,aAAA;AACF,SAAA,EACD,OAAO,EAAE,MAAM,IAAI,EAAE,CACtB;;uGA/DQ,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AAArB,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,cADR,MAAM,EAAA,CAAA;;AACnB,qBAAqB,GAAA,UAAA,CAAA;AAFjC,IAAA,YAAY,EAAE;qCAI0B,gBAAgB;QACf,iBAAiB,CAAA;AAH9C,CAAA,EAAA,qBAAqB,CAiEjC;2FAjEY,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;MCNrB,uBAAuB,CAAA;AAClC,IAAA,OAAO,CAAC,IAAiB,EAAA;QACvB,OAAO;AACL,YAAA,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;AACpB,YAAA,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC;AAC1B,YAAA,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,CAAC;SAC3C;;AAGH,IAAA,MAAM,CAAC,IAAiB,EAAA;QACtB,OAAO;AACL,YAAA,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;AACpB,YAAA,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC;AAC1B,YAAA,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,CAAC;SAC3C;;uGAdQ,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AAAvB,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,cADV,MAAM,EAAA,CAAA;;2FACnB,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBADnC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;AC+CrB,IAAA,uBAAuB,GAA7B,MAAM,uBAAuB,CAAA;AAcf,IAAA,WAAA;AACA,IAAA,WAAA;AACA,IAAA,gBAAA;AACA,IAAA,gBAAA;AACA,IAAA,qBAAA;AACA,IAAA,uBAAA;AACA,IAAA,iBAAA;AAlBnB,IAAA,WAAW;AAGX,IAAA,WAAW,GAAG,IAAI,YAAY,EAAa;AAE3C,IAAA,IAAI,GAAG,IAAI,gBAAgB,CAAC,EAAE,CAAC;AAC/B,IAAA,YAAY,GAAG,IAAI,eAAe,CAAgB,IAAI,CAAC;AACvD,IAAA,aAAa,GAAG,IAAI,eAAe,CAA6B,IAAI,CAAC;AAErE,IAAA,WAAA,CAGmB,WAAoC,EACpC,WAAwB,EACxB,gBAAkC,EAClC,gBAAkC,EAClC,qBAA4C,EAC5C,uBAAgD,EAChD,iBAAoC,EAAA;QANpC,IAAW,CAAA,WAAA,GAAX,WAAW;QACX,IAAW,CAAA,WAAA,GAAX,WAAW;QACX,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB;QAChB,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB;QAChB,IAAqB,CAAA,qBAAA,GAArB,qBAAqB;QACrB,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB;QACvB,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB;;IAGpC,QAAQ,GAAA;QACN,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC;AACrC,QAAA,IAAI,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,gBAAgB,EAAE,EAAE,EAAE,CAAC;;IAGhE,iBAAiB,CACf,IAAoB,GAAA,EAAE,QAAQ,EAAE,EAAE,EAAE,gBAAgB,EAAE,EAAE,EAAE,EAAA;QAE1D,MAAM,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,CAAC;QACxD,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AACrC,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;;IAG/B,UAAU,GAAA;AACR,QAAA,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACnB,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AAClE,YAAA,IAAI,CAAC;AACF,iBAAA,MAAM,CAAC,EAAE,GAAG,KAAK,EAAE;AACnB,iBAAA,IAAI,CACH,GAAG,CAAC,CAAC,MAAM,KAAI;AACb,gBAAA,IAAI,MAAM,CAAC,MAAM,EAAE;oBACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AACpC,oBAAA,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC3B,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,SAAS,CAAC,CAC3C;;AAEL,aAAC,CAAC,EACF,UAAU,CAAC,CAAC,GAAG,KACb,IAAI,CAAC,iBAAiB,CAAC,0BAA0B,CAAC,GAAG,EAAE,CAAC,OAAO,KAC7D,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAC9B,CACF;;AAED,YAAA,UAAU,CAAC,CAAC,GAAQ,KAAI;AACtB,gBAAA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;gBAClB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;AACxC,gBAAA,OAAO,EAAE,CAAC,IAAI,CAAC;AACjB,aAAC,CAAC,EACF,cAAc,CAAC,IAAI,CAAC;AAErB,iBAAA,SAAS,EAAE;;aACT;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC/B,YAAA,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC3B,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,CAAC,CACrD;;;AAIG,IAAA,eAAe,CAAC,OAGvB,EAAA;AACC,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,OAAO,CAAC,CACpD;;AA9EQ,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,kBAaxB,aAAa,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAL,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAM,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,uBAAA,EAAA,EAAA,EAAA,KAAA,EAAAJ,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;AAbZ,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,8JClDpC,gwBAgCA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EDII,YAAY,EACZ,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,YAAY,4vBACZ,aAAa,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EACb,cAAc,EACd,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,SAAA,EAAA,QAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,2BAAA,EAAA,QAAA,EAAA,8IAAA,EAAA,MAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2EAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,WAAW,qSACX,mBAAmB,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EACnB,SAAS,EACT,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,YAAY,iRACZ,kBAAkB,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,qBAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA;;AAMT,uBAAuB,GAAA,UAAA,CAAA;AAjBnC,IAAA,YAAY,EAAE;qCA+BmB,uBAAuB;QACvB,WAAW;QACN,gBAAgB;QAChB,gBAAgB;QACX,qBAAqB;QACnB,uBAAuB;QAC7B,iBAAiB,CAAA;AApB5C,CAAA,EAAA,uBAAuB,CAgFnC;2FAhFY,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAhBnC,SAAS;AACC,YAAA,IAAA,EAAA,CAAA,EAAA,OAAA,EAAA;wBACP,YAAY;wBACZ,YAAY;wBACZ,aAAa;wBACb,cAAc;wBACd,WAAW;wBACX,mBAAmB;wBACnB,SAAS;wBACT,YAAY;wBACZ,kBAAkB;AACnB,qBAAA,EAAA,QAAA,EACS,mBAAmB,EAAA,eAAA,EAEZ,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,gwBAAA,EAAA;;0BAc5C;;0BACA,MAAM;2BAAC,aAAa;oOAXvB,WAAW,EAAA,CAAA;sBADV;gBAID,WAAW,EAAA,CAAA;sBADV;;;AExCH,MAAM,kCAAkC,GAAG,YAAY;MAG1C,qBAAqB,CAAA;AAEb,IAAA,eAAA;AACA,IAAA,gBAAA;AAER,IAAA,mBAAA;AACQ,IAAA,iBAAA;AALnB,IAAA,WAAA,CACmB,eAAgC,EAChC,gBAAkC,EAE1C,mBAAwC,EAChC,iBAAoC,EAAA;QAJpC,IAAe,CAAA,eAAA,GAAf,eAAe;QACf,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB;QAExB,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB;QACX,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB;;IAGpC,aAAa,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE,CAAC,IAAI,CACtD,GAAG,CAAC,CAAC,OAAO,KAAI;YACd,OAAO,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE;AAC/D,SAAC,CAAC,EACF,UAAU,CAAC,CAAC,GAAG,KAAI;YACjB,IACE,OAAO,IAAI,GAAG;gBACb,GAAG,CAAC,KAA4B,CAAC,IAAI,KAAK,sBAAsB,CAAC,IAAI,EACtE;AACA,gBAAA,OAAO,EAAE,CACP,YAAY,CAAC,OAAO,CAAC,kCAAkC,CAAC;AACtD,oBAAA,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CACzC;;AAEH,YAAA,OAAO,UAAU,CAAC,MAAM,GAAG,CAAC;SAC7B,CAAC,CACH;;AAGH,IAAA,aAAa,CAAC,IAAY,EAAA;AACxB,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,2BAA2B,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CACpE,GAAG,CAAC,MAAK;AACP,YAAA,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC;AAC9C,SAAC,CAAC,EACF,UAAU,CAAC,CAAC,GAAG,KAAI;YACjB,IACE,OAAO,IAAI,GAAG;gBACb,GAAG,CAAC,KAA4B,CAAC,IAAI,KAAK,sBAAsB,CAAC,IAAI,EACtE;AACA,gBAAA,YAAY,CAAC,OAAO,CAAC,kCAAkC,EAAE,IAAI,CAAC;AAE9D,gBAAA,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC;AAE5C,gBAAA,OAAO,EAAE,CAAC,IAAI,CAAC;;AAEjB,YAAA,OAAO,UAAU,CAAC,MAAM,GAAG,CAAC;SAC7B,CAAC,CACH;;AA/CQ,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,mFAItB,6BAA6B,EAAA,EAAA,EAAA,KAAA,EAAAH,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AAJ5B,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,cADR,MAAM,EAAA,CAAA;;2FACnB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;0BAK7B,MAAM;2BAAC,6BAA6B;;;ACjBlC,MAAM,yBAAyB,GAAG;MAE5B,aAAa,CAAA;AACxB,IAAA,KAAK;AAEL,IAAA,WAAA,CAAY,OAAuB,EAAA;AACjC,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC;;AAE/B;MAGY,gBAAgB,CAAA;AACE,IAAA,eAAA;AAA7B,IAAA,WAAA,CAA6B,eAA4B,EAAA;QAA5B,IAAe,CAAA,eAAA,GAAf,eAAe;;AAC5C,IAAA,WAAW,CAAC,KAA6B,EAAA;QACvC,IAAI,KAAK,CAAC,IAAI,CAAC,yBAAyB,CAAC,YAAY,aAAa,EAAE;YAClE,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,yBAAyB,CAAC;YAC3D,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK;YACpD,MAAM,kBAAkB,GAAG,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,IAAI,KAC9D,IAAI,CAAC,WAAW,EAAE,CACnB;AACD,YAAA,OAAO,EAAE,CACP,OAAO,CACL,CAAC,QAAQ;gBACP,kBAAkB,CAAC,MAAM,GAAG,CAAC;AAC7B,gBAAA,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC3D,iBAAC,kBAAkB,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CACxD,CACF;;AAEH,QAAA,OAAO,EAAE,CAAC,IAAI,CAAC;;uGAlBN,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAF,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;AAAhB,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cADH,MAAM,EAAA,CAAA;;2FACnB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;ACdlC;;AAEG;;;;"}