{"version":3,"file":"nestjs-mod-fullstack-common-angular.mjs","sources":["../../../../libs/common-angular/src/lib/constants/browser-timezone-offset.ts","../../../../libs/common-angular/src/lib/constants/date-input-formats.ts","../../../../libs/common-angular/src/lib/services/active-lang.service.ts","../../../../libs/common-angular/src/lib/formly/date-input.component.ts","../../../../libs/common-angular/src/lib/formly/formly-fields.ts","../../../../libs/common-angular/src/lib/grid-utils/get-query-meta-by-params.ts","../../../../libs/common-angular/src/lib/grid-utils/nz-table-sort-order-detector.pipe.ts","../../../../libs/common-angular/src/lib/grid-utils/query-meta.ts","../../../../libs/common-angular/src/lib/services/supabase.service.ts","../../../../libs/common-angular/src/lib/services/validation.service.ts","../../../../libs/common-angular/src/lib/transformers/map-graphql-errors.ts","../../../../libs/common-angular/src/lib/transformers/safe-parse-json.ts","../../../../libs/common-angular/src/lib/utils/web-socket.ts","../../../../libs/common-angular/src/nestjs-mod-fullstack-common-angular.ts"],"sourcesContent":["export const BROWSER_TIMEZONE_OFFSET = new Date().getTimezoneOffset() / 60;\n","export const DATE_INPUT_FORMATS = {\n  'en-US': 'MM/dd/yyyy HH:mm:ss',\n  'en-GB': 'dd/MM/yyyy HH:mm:ss',\n  'ar-SA': 'dd/MM/yyyy هه:sس',\n  'bg-BG': 'd.M.yyyy H:m:s ч.',\n  'ca-ES': 'dd/MM/yyyy H:mm:ss',\n  'cs-CZ': 'd.M.yyyy H:mm:ss',\n  'da-DK': 'dd-MM-yyyy HH:mm:ss',\n  'de-DE': 'dd.MM.yyyy HH:mm:ss',\n  'el-GR': 'd/M/yyyy h:mm:ss πμ|μμ',\n  'es-MX': 'dd/MM/yyyy H:mm:ss',\n  'fi-FI': 'd.M.yyyy klo H.mm.ss',\n  'fr-FR': 'dd/MM/yyyy HH:mm:ss',\n  'he-IL': 'dd/MM/yyyy HH:mm:ss',\n  'hi-IN': 'dd-MM-yyyy hh:mm:ss बजे',\n  'hr-HR': 'd.M.yyyy. H:mm:ss',\n  'hu-HU': 'yyyy.MM.dd. H:mm:ss',\n  'id-ID': 'dd/MM/yyyy HH:mm:ss',\n  'is-IS': 'd.M.yyyy kl. HH:mm:ss',\n  'it-IT': 'dd/MM/yyyy HH:mm:ss',\n  'ja-JP': 'yyyy/MM/dd HH:mm:ss',\n  'ko-KR': 'yyyy년 MM월 dd일 HH시 mm분 ss초',\n  'lt-LT': 'yyyy.MM.dd. HH:mm:ss',\n  'lv-LV': 'yyyy.gada MM.mēnesis dd.diena HH:mm:ss',\n  'ms-MY': 'dd/MM/yyyy HH:mm:ss',\n  'nl-NL': 'dd-MM-yyyy HH:mm:ss',\n  'no-NO': 'dd.MM.yyyy HH:mm:ss',\n  'pl-PL': 'dd.MM.yyyy HH:mm:ss',\n  'pt-BR': 'dd/MM/yyyy HH:mm:ss',\n  'ro-RO': 'dd.MM.yyyy HH:mm:ss',\n  'ru-RU': 'dd.MM.yyyy HH:mm:ss',\n  'sk-SK': 'd. M. yyyy H:mm:ss',\n  'sl-SI': 'd.M.yyyy H:mm:ss',\n  'sr-RS': 'dd.MM.yyyy. HH:mm:ss',\n  'sv-SE': 'yyyy-MM-dd HH:mm:ss',\n  'th-TH': 'วันที่ d เดือน M ปี yyyy เวลา H:mm:ss',\n  'tr-TR': 'dd.MM.yyyy HH:mm:ss',\n  'uk-UA': 'dd.MM.yyyy HH:mm:ss',\n  'vi-VN': 'dd/MM/yyyy HH:mm:ss',\n  'zh-CN': 'yyyy年MM月dd日 HH时mm分ss秒',\n  'zh-TW': 'yyyy年MM月dd日 HH時mm分ss秒',\n};\n","import { Inject, Injectable } from '@angular/core';\nimport { toCamelCase, TranslocoService } from '@jsverse/transloco';\nimport {\n  LangToLocaleMapping,\n  TRANSLOCO_LOCALE_LANG_MAPPING,\n  TranslocoLocaleService,\n} from '@jsverse/transloco-locale';\nimport * as dateFnsLocales from 'date-fns/locale';\nimport * as ngZorroLocales from 'ng-zorro-antd/i18n';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\n\n@Injectable({ providedIn: 'root' })\nexport class ActiveLangService {\n  constructor(\n    private readonly translocoService: TranslocoService,\n    private readonly translocoLocaleService: TranslocoLocaleService,\n    private readonly nzI18nService: NzI18nService,\n    @Inject(TRANSLOCO_LOCALE_LANG_MAPPING)\n    readonly langToLocaleMapping: LangToLocaleMapping\n  ) {}\n\n  applyActiveLang(lang: string) {\n    const { locale, localeInSnakeCase, localeInCamelCase } =\n      this.normalizeLangKey(lang);\n\n    this.translocoService.setActiveLang(lang);\n    this.translocoLocaleService.setLocale(locale);\n\n    if (ngZorroLocales[localeInSnakeCase]) {\n      this.nzI18nService.setLocale(ngZorroLocales[localeInSnakeCase]);\n    }\n\n    if (dateFnsLocales[lang]) {\n      this.nzI18nService.setDateLocale(dateFnsLocales[lang]);\n    }\n    if (dateFnsLocales[localeInCamelCase]) {\n      this.nzI18nService.setDateLocale(dateFnsLocales[localeInCamelCase]);\n    }\n  }\n\n  normalizeLangKey(lang: string) {\n    const locale = this.langToLocaleMapping[lang];\n    const localeInCamelCase = toCamelCase(locale);\n    const localeInSnakeCase = locale.split('-').join('_');\n    return { locale, localeInSnakeCase, localeInCamelCase };\n  }\n}\n","import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslocoService } from '@jsverse/transloco';\nimport { FieldType, FieldTypeConfig, FormlyModule } from '@ngx-formly/core';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { map, Observable } from 'rxjs';\nimport { DATE_INPUT_FORMATS } from '../constants/date-input-formats';\nimport { ActiveLangService } from '../services/active-lang.service';\n\n@Component({\n  selector: 'date-input',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, FormlyModule, NzDatePickerModule, AsyncPipe],\n  template: `\n    <nz-date-picker\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [nzShowTime]=\"true\"\n      [nzFormat]=\"(format$ | async)!\"\n    ></nz-date-picker>\n  `,\n})\nexport class DateInputComponent extends FieldType<FieldTypeConfig> {\n  format$: Observable<string>;\n\n  constructor(\n    private readonly translocoService: TranslocoService,\n    private readonly activeLangService: ActiveLangService\n  ) {\n    super();\n    this.format$ = translocoService.langChanges$.pipe(\n      map((lang) => {\n        const { locale } = this.activeLangService.normalizeLangKey(lang);\n        return DATE_INPUT_FORMATS[locale]\n          ? DATE_INPUT_FORMATS[locale]\n          : DATE_INPUT_FORMATS['en-US'];\n      })\n    );\n  }\n}\n","import { TypeOption } from '@ngx-formly/core/lib/models';\nimport { DateInputComponent } from './date-input.component';\n\nexport const COMMON_FORMLY_FIELDS: TypeOption[] = [\n  {\n    name: 'date-input',\n    component: DateInputComponent,\n    extends: 'input',\n  },\n];\n","import { NzTableQueryParams } from 'ng-zorro-antd/table';\nimport { RequestMeta } from './query-meta';\n\nexport function getQueryMetaByParams(params: NzTableQueryParams): RequestMeta {\n  return {\n    curPage: params.pageIndex,\n    perPage: params.pageSize,\n    sort: params.sort\n      .filter((s) => s.value)\n      .reduce((all, cur) => {\n        if (cur.value === 'ascend') {\n          return { ...all, [cur.key]: 'asc' };\n        }\n        if (cur.value === 'descend') {\n          return { ...all, [cur.key]: 'desc' };\n        }\n        return all;\n      }, {}),\n  };\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { NzTableSortOrder } from 'ng-zorro-antd/table';\n\n@Pipe({\n  standalone: true,\n  name: 'nzTableSortOrderDetector',\n})\nexport class NzTableSortOrderDetectorPipe implements PipeTransform {\n  transform(value: string): NzTableSortOrder {\n    if (value === 'asc') {\n      return 'ascend';\n    }\n    if (value === 'desc') {\n      return 'descend';\n    }\n    return null;\n  }\n}\n","export interface RequestMeta {\n  curPage: number;\n  perPage: number;\n  totalResults?: number;\n  sort: Record<string, 'asc' | 'desc'>;\n}\n\nexport const DEFAULT_QUERY_META: RequestMeta = {\n  curPage: 1,\n  perPage: 5,\n  sort: { createdAt: 'desc' },\n};\n\nexport function getQueryMeta(\n  meta: Partial<RequestMeta>,\n  defaultQueryMeta?: RequestMeta\n): RequestMeta {\n  return {\n    sort:\n      Object.keys(meta.sort || {}).length === 0\n        ? defaultQueryMeta?.sort || { createdAt: 'desc' }\n        : meta.sort || {},\n    curPage: !meta.curPage\n      ? defaultQueryMeta?.curPage || DEFAULT_QUERY_META.curPage\n      : meta.curPage,\n    perPage: !meta.perPage\n      ? defaultQueryMeta?.perPage || DEFAULT_QUERY_META.perPage\n      : meta.perPage,\n  };\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { marker } from '@jsverse/transloco-keys-manager/marker';\nimport {\n  AuthError,\n  AuthResponse,\n  AuthTokenResponsePassword,\n  SupabaseClient,\n  UserResponse,\n} from '@supabase/supabase-js';\nimport { map } from 'rxjs';\n\nexport const SUPABASE_URL = new InjectionToken<string>('SupabaseUrl');\nexport const SUPABASE_KEY = new InjectionToken<string>('SupabaseKey');\n\nexport function mapAuthResponse() {\n  return map((result: AuthResponse) => {\n    const message = result.error?.message;\n    if (message) {\n      if (message === 'unauthorized') {\n        throw new Error(marker('Unauthorized'));\n      } else {\n        throw new Error(message);\n      }\n    }\n    return result.data;\n  });\n}\n\nexport function mapAuthError() {\n  return map((result: { error: AuthError | null }) => {\n    if (!result.error) {\n      return result.error;\n    }\n    const message = result.error.message;\n    throw new Error(message);\n  });\n}\n\nexport function mapUserResponse() {\n  return map((result: UserResponse) => {\n    const message = result.error?.message;\n    if (message) {\n      if (message === 'unauthorized') {\n        throw new Error(marker('Unauthorized'));\n      } else {\n        throw new Error(message);\n      }\n    }\n    return result.data;\n  });\n}\n\nexport function mapAuthTokenResponsePassword() {\n  return map((result: AuthTokenResponsePassword) => {\n    const message = result.error?.message;\n    if (message) {\n      if (message === 'unauthorized') {\n        throw new Error(marker('Unauthorized'));\n      } else {\n        throw new Error(message);\n      }\n    }\n    return result.data;\n  });\n}\n\n@Injectable({ providedIn: 'root' })\nexport class SupabaseService extends SupabaseClient {\n  constructor(\n    @Inject(SUPABASE_URL)\n    private readonly _supabaseUrl: string,\n    @Inject(SUPABASE_KEY)\n    private readonly _supabaseKey: string\n  ) {\n    super(_supabaseUrl, _supabaseKey);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslocoService } from '@jsverse/transloco';\nimport {\n  ValidationErrorEnumInterface,\n  ValidationErrorInterface,\n  ValidationErrorMetadataInterface,\n} from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { UntilDestroy } from '@ngneat/until-destroy';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { of, throwError } from 'rxjs';\n\n@UntilDestroy()\n@Injectable({ providedIn: 'root' })\nexport class ValidationService {\n  constructor(protected readonly translocoService: TranslocoService) {}\n\n  catchAndProcessServerError(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    err: any,\n    setFormlyFields: (options?: {\n      errors?: ValidationErrorMetadataInterface[];\n    }) => void\n  ) {\n    const error = err.error as ValidationErrorInterface;\n    if (error?.code?.includes(ValidationErrorEnumInterface.VALIDATION_000)) {\n      setFormlyFields({ errors: error.metadata });\n      return of(null);\n    }\n    return throwError(() => err);\n  }\n\n  appendServerErrorsAsValidatorsToFields(\n    fields: FormlyFieldConfig[],\n    errors: ValidationErrorMetadataInterface[]\n  ) {\n    return (fields || []).map((f: FormlyFieldConfig) => {\n      const error = errors?.find((e) => e.property === f.key);\n      if (error) {\n        f.validators = Object.fromEntries(\n          error.constraints.map((c) => {\n            if (typeof f.key === 'string') {\n              c.description = c.description.replace(\n                f.key,\n                this.translocoService.translate('field \"{{label}}\"', {\n                  label: f.props?.label?.toLowerCase(),\n                })\n              );\n            }\n            return [\n              c.name === 'isNotEmpty' ? 'required' : c.name,\n              {\n                expression: () => false,\n                message: () => c.description,\n              },\n            ];\n          })\n        );\n      }\n      return f;\n    });\n  }\n}\n","import { marker } from '@jsverse/transloco-keys-manager/marker';\nimport { map } from 'rxjs';\n\nexport function mapGraphqlErrors<T>() {\n  return map((result: { data: T; errors: { message: string }[] }) => {\n    const message = result.errors?.[0]?.message;\n    if (message) {\n      if (message === 'unauthorized') {\n        throw new Error(marker('Unauthorized'));\n      } else {\n        throw new Error(message);\n      }\n    }\n    return result.data;\n  });\n}\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeParseJson<T = any>(data: any): T {\n  try {\n    return JSON.parse(data);\n  } catch (err) {\n    return data;\n  }\n}\n","import { Observable, finalize } from 'rxjs';\n\nexport function webSocket<T>({\n  address,\n  eventName,\n  options,\n}: {\n  address: string;\n  eventName: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  options?: any;\n}) {\n  const wss = new WebSocket(\n    address.replace('/api', '').replace('http', 'ws'),\n    options\n  );\n  return new Observable<{ data: T; event: string }>((observer) => {\n    wss.addEventListener('open', () => {\n      wss.addEventListener('message', ({ data }) => {\n        observer.next(JSON.parse(data.toString()));\n      });\n      wss.addEventListener('error', (err) => {\n        observer.error(err);\n        if (wss?.readyState == WebSocket.OPEN) {\n          wss.close();\n        }\n      });\n      wss.send(\n        JSON.stringify({\n          event: eventName,\n          data: true,\n        })\n      );\n    });\n  }).pipe(\n    finalize(() => {\n      if (wss?.readyState == WebSocket.OPEN) {\n        wss.close();\n      }\n    })\n  );\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i2.ActiveLangService"],"mappings":"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"}