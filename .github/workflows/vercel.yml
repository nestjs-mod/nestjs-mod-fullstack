name: Deploy to Vercel

on:
  push:
    branches: ['master', 'vercel']

jobs:
  build-and-deploy:
    environment: vercel
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.11.0'

      - name: Install dependencies
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build project
        run: |
          cp -r .vercel/.env.production.local .env
          npx --yes tsx update-files-for-vercel.ts
          npm run manual-supabase-build

      - name: Remove devDependencies
        run: |
          cp -r package.json original-package.json
          echo $(cat package.json | jq 'del(.devDependencies)') > package.json

      - name: Remove yarn lock file
        run: |
          cp -r yarn.lock original-yarn.lock
          rm -rf yarn.lock

      - name: Copy the settings
        run: cp -r .docker/nx.json nx.json

      - name: Install only prod dependencies
        uses: borales/actions-yarn@v4
        with:
          cmd: install --prod

      - name: Installing utilities to generate additional files
        run: yarn add nx@20.1.2 prisma@5.22.0 @brakebein/prisma-generator-nestjs-dto@1.24.0-beta5 tslib -D

      - name: Generate prisma clients
        run: npm run prisma:generate

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }} --prod

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --yes --prebuilt --prod --archive=tgz --token=${{ secrets.VERCEL_TOKEN }}

      - name: Restore original yarn lock file and package.json
        run: |
          rm -rf yarn.lock
          cp -r original-yarn.lock yarn.lock
          rm -rf package.json
          cp -r original-package.json package.json

      - name: Install dependencies
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Run e2e-tests
        run: |
          export BASE_URL=https://nestjs-mod-fullstack.vercel.app
          export CLIENT_URL=https://nestjs-mod-fullstack.vercel.app
          export SERVER_URL=https://nestjs-mod-fullstack.vercel.app/api
          npm run test:e2e -- ru-server.spec.ts
