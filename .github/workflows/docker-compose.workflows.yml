name: 'Docker Compose'

# on:
#   push:
#     branches: [post-24]

jobs:
  deploy:
    name: Deploy
    # environment: docker-compose-full
    runs-on: [self-hosted, vps1724252356]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2

      - name: Deploy
        env:
          SERVER_ROOT_DATABASE_URL: ${{ secrets.SERVER_ROOT_DATABASE_URL }}
          SERVER_APP_DATABASE_URL: ${{ secrets.SERVER_APP_DATABASE_URL }}
          SERVER_POSTGRE_SQL_POSTGRESQL_USERNAME: ${{ secrets.SERVER_POSTGRE_SQL_POSTGRESQL_USERNAME }}
          SERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD: ${{ secrets.SERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD }}
          SERVER_POSTGRE_SQL_POSTGRESQL_DATABASE: ${{ secrets.SERVER_POSTGRE_SQL_POSTGRESQL_DATABASE }}
          SERVER_DOMAIN: ${{ secrets.SERVER_DOMAIN }}
          HTTPS_PORTAL_STAGE: ${{ secrets.HTTPS_PORTAL_STAGE }}
        run: |
          echo "SERVER_ROOT_DATABASE_URL=${SERVER_ROOT_DATABASE_URL}" > .docker/docker-compose-full.env
          echo "SERVER_APP_DATABASE_URL=${SERVER_APP_DATABASE_URL}" > .docker/docker-compose-full.env
          echo "SERVER_POSTGRE_SQL_POSTGRESQL_USERNAME=${SERVER_POSTGRE_SQL_POSTGRESQL_USERNAME}" > .docker/docker-compose-full.env
          echo "SERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD=${SERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD}" > .docker/docker-compose-full.env
          echo "SERVER_POSTGRE_SQL_POSTGRESQL_DATABASE=${SERVER_POSTGRE_SQL_POSTGRESQL_DATABASE}" > .docker/docker-compose-full.env
          echo "SERVER_DOMAIN=${SERVER_DOMAIN}" > .docker/docker-compose-full.env
          echo "HTTPS_PORTAL_STAGE=${HTTPS_PORTAL_STAGE}" > .docker/docker-compose-full.env
          npm run docker-compose-full:prod:start
