generator client {
  provider = "prisma-client-js"
  
  output   = "../../../../../node_modules/@prisma/auth-client"
  binaryTargets = ["native","rhel-openssl-3.0.x","linux-musl-openssl-3.0.x","linux-musl"]
  
}
datasource db {
  provider          = "postgres"
  url               = env("SERVER_AUTH_DATABASE_URL")
}
generator prismaClassGenerator {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../lib/generated/rest/dto"
  flatResourceStructure           = "false"
  reExport                        = "false"
  classValidation                 = "true"
  createDtoPrefix                 = "Create"
  entitySuffix                    = ""
  dtoSuffix                       = "Dto"
  exportRelationModifierClasses   = "true"
  updateDtoPrefix                 = "Update"
  definiteAssignmentAssertion     = "true"
  prettier                        = "true"
  entityPrefix                    = ""
  noDependencies                  = "false"
  fileNamingStyle                 = "kebab"
  annotateAllDtoProperties        = "true"
  outputToNestJsResourceStructure = "false"
}

model AuthUser {
  /// @DtoCreateHidden
  id             String   @id(map: "PK_AUTH_USER") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  externalUserId String   @unique(map: "UQ_AUTH_USER") @db.Uuid
  userRole       AuthRole
  timezone       Float?
  /// @DtoCreateHidden
  /// @DtoUpdateHidden
  createdAt      DateTime @default(now()) @db.Timestamp(6)
  /// @DtoCreateHidden
  /// @DtoUpdateHidden
  updatedAt      DateTime @default(now()) @db.Timestamp(6)
  lang           String?  @db.VarChar(2)

  @@index([userRole], map: "IDX_AUTH_USER__USER_ROLE")
}

model migrations_auth {
  installed_rank Int      @id(map: "__migrations_auth_pk")
  version        String?  @db.VarChar(50)
  description    String   @db.VarChar(200)
  type           String   @db.VarChar(20)
  script         String   @db.VarChar(1000)
  checksum       Int?
  installed_by   String   @db.VarChar(100)
  installed_on   DateTime @default(now()) @db.Timestamp(6)
  execution_time Int
  success        Boolean

  @@index([success], map: "__migrations_auth_s_idx")
  @@map("__migrations_auth")
}

enum AuthRole {
  Admin
  User
}
