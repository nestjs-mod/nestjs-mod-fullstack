# Do not modify this file, it is generated using the DockerCompose module included with NestJS-mod.
version: "3"
services:
  server-postgre-sql:
    image: "bitnami/postgresql:15.5.0"
    container_name: "server-postgre-sql"
    volumes:
      - "server-postgre-sql-volume:/bitnami/postgresql"
    ports:
      - "5432:5432"
    networks:
      - "server-network"
    healthcheck:
      test:
        - "CMD-SHELL"
        - "pg_isready -U postgres"
      interval: "5s"
      timeout: "5s"
      retries: 5
    tty: true
    restart: "always"
    environment:
      POSTGRESQL_USERNAME: "${SERVER_POSTGRE_SQL_POSTGRESQL_USERNAME}"
      POSTGRESQL_PASSWORD: "${SERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD}"
      POSTGRESQL_DATABASE: "${SERVER_POSTGRE_SQL_POSTGRESQL_DATABASE}"
  server-redis:
    image: "bitnami/redis:7.4.1"
    container_name: "server-redis"
    volumes:
      - "server-redis-volume:/bitnami/redis/data"
    ports:
      - "6379:6379"
    networks:
      - "server-network"
    environment:
      REDIS_DATABASE: "${SERVER_REDIS_REDIS_DATABASE}"
      REDIS_PASSWORD: "${SERVER_REDIS_REDIS_PASSWORD}"
      REDIS_DISABLE_COMMANDS: "${SERVER_REDIS_REDIS_DISABLE_COMMANDS}"
      REDIS_IO_THREADS: "${SERVER_REDIS_REDIS_IO_THREADS}"
      REDIS_IO_THREADS_DO_READS: "${SERVER_REDIS_REDIS_IO_THREADS_DO_READS}"
    healthcheck:
      test:
        - "CMD-SHELL"
        - "redis-cli --no-auth-warning -a $$REDIS_PASSWORD ping | grep PONG"
      interval: "5s"
      timeout: "5s"
      retries: 5
    tty: true
    restart: "always"
  server-minio:
    image: "bitnami/minio:2024.11.7"
    container_name: "server-minio"
    volumes:
      - "server-minio-volume:/bitnami/minio/data"
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - "server-network"
    environment:
      MINIO_ROOT_USER: "${SERVER_MINIO_MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${SERVER_MINIO_MINIO_ROOT_PASSWORD}"
    healthcheck:
      test:
        - "CMD-SHELL"
        - "mc"
        - "ready"
        - "local"
      interval: "5s"
      timeout: "5s"
      retries: 5
    tty: true
    restart: "always"
  server-maildev:
    image: "maildev/maildev:2.2.1"
    container_name: "server-maildev"
    ports:
      - "1025:1025"
      - "1080:1080"
    networks:
      - "server-network"
    environment:
      MAILDEV_SMTP_PORT: "${SERVER_MAILDEV_MAILDEV_SMTP_PORT}"
      MAILDEV_WEB_PORT: "${SERVER_MAILDEV_MAILDEV_WEB_PORT}"
    healthcheck:
      test: "wget -O - http://localhost:${MAILDEV_WEB_PORT}${MAILDEV_BASE_PATHNAME}/healthz || exit 1"
      interval: "10s"
      timeout: "5s"
      retries: 5
    tty: true
    restart: "always"
  server-sso:
    image: "ghcr.io/nestjs-mod/nestjs-mod-sso-server:1.4.3"
    container_name: "server-sso"
    ports:
      - "8080:8080"
    networks:
      - "server-network"
    environment:
      SINGLE_SIGN_ON_PORT: '${SINGLE_SIGN_ON_PORT}'
      SINGLE_SIGN_ON_SSO_ADMIN_SECRET: '${SINGLE_SIGN_ON_SSO_ADMIN_SECRET}'
      SINGLE_SIGN_ON_WEBHOOK_DATABASE_URL: '${SINGLE_SIGN_ON_WEBHOOK_DATABASE_URL}'
      SINGLE_SIGN_ON_SSO_DATABASE_URL: '${SINGLE_SIGN_ON_SSO_DATABASE_URL}'
      SINGLE_SIGN_ON_NOTIFICATIONS_DATABASE_URL: '${SINGLE_SIGN_ON_NOTIFICATIONS_DATABASE_URL}'
      SINGLE_SIGN_ON_TWO_FACTOR_DATABASE_URL: '${SINGLE_SIGN_ON_TWO_FACTOR_DATABASE_URL}'
      SINGLE_SIGN_ON_SSO_ADMIN_EMAIL: '${SINGLE_SIGN_ON_SSO_ADMIN_EMAIL}'
      SINGLE_SIGN_ON_SSO_ADMIN_USERNAME: '${SINGLE_SIGN_ON_SSO_ADMIN_USERNAME}'
      SINGLE_SIGN_ON_SSO_ADMIN_PASSWORD: '${SINGLE_SIGN_ON_SSO_ADMIN_PASSWORD}'
      SINGLE_SIGN_ON_MINIO_SERVER_HOST: '${SINGLE_SIGN_ON_MINIO_SERVER_HOST}'
      SINGLE_SIGN_ON_MINIO_ACCESS_KEY: '${SINGLE_SIGN_ON_MINIO_ACCESS_KEY}'
      SINGLE_SIGN_ON_MINIO_SECRET_KEY: '${SINGLE_SIGN_ON_MINIO_SECRET_KEY}'
      SINGLE_SIGN_ON_KEYV_URL: '${SINGLE_SIGN_ON_KEYV_URL}'
      SINGLE_SIGN_ON_SSO_SERVER_URL: '${SINGLE_SIGN_ON_SSO_SERVER_URL}'
      SINGLE_SIGN_ON_SSO_DEFAULT_PUBLIC_PROJECTS: '${SINGLE_SIGN_ON_SSO_DEFAULT_PUBLIC_PROJECTS}'
      SINGLE_SIGN_ON_SSO_DEFAULT_PROJECT: '${SINGLE_SIGN_ON_SSO_DEFAULT_PROJECT}'
      SINGLE_SIGN_ON_ROOT_DATABASE_URL: '${SINGLE_SIGN_ON_ROOT_DATABASE_URL}'
      SINGLE_SIGN_ON_SSO_CLIENT_URL: '${SINGLE_SIGN_ON_SSO_CLIENT_URL}'
      SINGLE_SIGN_ON_CLIENT_MINIO_URL: '${SINGLE_SIGN_ON_CLIENT_MINIO_URL}'
    tty: true
    restart: "always"
    depends_on:
      server-postgre-sql:
        condition: "service_healthy"
networks:
  server-network:
    driver: "bridge"
volumes:
  server-postgre-sql-volume:
    name: "server-postgre-sql-volume"
  server-redis-volume:
    name: "server-redis-volume"
  server-minio-volume:
    name: "server-minio-volume"
