# Do not modify this file, it is generated using the DockerCompose module included with NestJS-mod.
version: "3"
services:
  server-postgre-sql:
    image: "bitnami/postgresql:15.5.0"
    container_name: "server-postgre-sql"
    volumes:
      - "server-postgre-sql-volume:/bitnami/postgresql"
    ports:
      - "5432:5432"
    networks:
      - "server-network"
    healthcheck:
      test:
        - "CMD-SHELL"
        - "pg_isready -U postgres"
      interval: "5s"
      timeout: "5s"
      retries: 5
    tty: true
    restart: "always"
    environment:
      POSTGRESQL_USERNAME: "${SERVER_POSTGRE_SQL_POSTGRESQL_USERNAME}"
      POSTGRESQL_PASSWORD: "${SERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD}"
      POSTGRESQL_DATABASE: "${SERVER_POSTGRE_SQL_POSTGRESQL_DATABASE}"
  server-authorizer:
    image: "lakhansamani/authorizer:1.4.4"
    container_name: "server-authorizer"
    ports:
      - "8080:8080"
    networks:
      - "server-network"
    environment:
      ADMIN_SECRET: "${SERVER_AUTHORIZER_ADMIN_SECRET}"
      DATABASE_TYPE: "${SERVER_AUTHORIZER_DATABASE_TYPE}"
      DATABASE_URL: "${SERVER_AUTHORIZER_DATABASE_URL}"
      DATABASE_NAME: "${SERVER_AUTHORIZER_DATABASE_NAME}"
      PORT: "${SERVER_AUTHORIZER_PORT}"
      COOKIE_NAME: "${SERVER_AUTHORIZER_COOKIE_NAME}"
      DISABLE_PLAYGROUND: "${SERVER_AUTHORIZER_DISABLE_PLAYGROUND}"
      ACCESS_TOKEN_EXPIRY_TIME: "${SERVER_AUTHORIZER_ACCESS_TOKEN_EXPIRY_TIME}"
      IMAGE: "${SERVER_AUTHORIZER_IMAGE}"
      DISABLE_STRONG_PASSWORD: "${SERVER_AUTHORIZER_DISABLE_STRONG_PASSWORD}"
      DISABLE_EMAIL_VERIFICATION: "${SERVER_AUTHORIZER_DISABLE_EMAIL_VERIFICATION}"
      FEATURE_NAME: "${SERVER_AUTHORIZER_FEATURE_NAME}"
      ORGANIZATION_NAME: "${SERVER_AUTHORIZER_ORGANIZATION_NAME}"
      DEPENDS_ON_SERVICE_NAMES: "${SERVER_AUTHORIZER_DEPENDS_ON_SERVICE_NAMES}"
      IS_EMAIL_SERVICE_ENABLED: "${SERVER_AUTHORIZER_IS_EMAIL_SERVICE_ENABLED}"
      IS_SMS_SERVICE_ENABLED: "${SERVER_AUTHORIZER_IS_SMS_SERVICE_ENABLED}"
      ENV: "${SERVER_AUTHORIZER_ENV}"
      EXTERNAL_CLIENT_PORT: "${SERVER_AUTHORIZER_EXTERNAL_CLIENT_PORT}"
      RESET_PASSWORD_URL: "${SERVER_AUTHORIZER_RESET_PASSWORD_URL}"
      ROLES: "${SERVER_AUTHORIZER_ROLES}"
      DEFAULT_ROLES: "${SERVER_AUTHORIZER_DEFAULT_ROLES}"
      JWT_ROLE_CLAIM: "${SERVER_AUTHORIZER_JWT_ROLE_CLAIM}"
      ORGANIZATION_LOGO: "${SERVER_AUTHORIZER_ORGANIZATION_LOGO}"
      COUCHBASE_BUCKET: "${SERVER_AUTHORIZER_COUCHBASE_BUCKET}"
      COUCHBASE_BUCKET_RAM_QUOTA: "${SERVER_AUTHORIZER_COUCHBASE_BUCKET_RAM_QUOTA}"
      COUCHBASE_SCOPE: "${SERVER_AUTHORIZER_COUCHBASE_SCOPE}"
    tty: true
    restart: "always"
    depends_on:
      server-postgre-sql:
        condition: "service_healthy"
networks:
  server-network:
    driver: "bridge"
volumes:
  server-postgre-sql-volume:
    name: "server-postgre-sql-volume"
